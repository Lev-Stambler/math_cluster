,Topic,Count,Name,Representation,Representative_Docs
0,-1,2782,-1_hf_prop_hab_lemma,"['hf', 'prop', 'hab', 'lemma', 'type', 'ha', 'isglb', 'lt', 'hb', 'hp']","['theorem exists_mem_cons_iff (p : α → Prop) (a : α) (l : list α) :\n  (∃ x ∈ a :: l, p x) ↔ p a ∨ ∃ x ∈ l, p x', 'lemma injective_of_increasing (r : α → α → Prop) (s : β → β → Prop) [is_trichotomous α r]\n  [is_irrefl β s] (f : α → β) (hf : ∀ {x y}, r x y → s (f x) (f y)) : injective f', 'lemma is_antichain.not_lt (hs : is_antichain (≤) s) (ha : a ∈ s) (hb : b ∈ s) : ¬ a < b']"
1,0,292,0_ps_ext_qs_coemk,"['ps', 'ext', 'qs', 'coemk', 'normalize', 'congrfun', 'ite', 'rrel', 'trunc', 'ppsqs']","[""lemma prod_congr {p p' ps ps' : α} : p = p' → ps = ps' → p * ps = p' * ps'"", 'lemma mul_pf_zero {ps qs : α} : qs = 0 → ps * qs = 0', ""lemma add_pf_sum_z {ps ps' qs : α} : ps = ps' → qs = 0 → ps + qs = ps'""]"
2,1,150,1_reverse_nodup_sublists_list,"['reverse', 'nodup', 'sublists', 'list', 'forall', 'lprod', 'dedup', 'lnodup', 'tolist', 'product']","[""theorem nodup_sublists' {l : list α} : nodup (sublists' l) ↔ nodup l"", 'theorem nodup_sublists {l : list α} : nodup (sublists l) ↔ nodup l', ""theorem sublists_eq_sublists' (l : list α) : sublists l = map reverse (sublists' (reverse l))""]"
3,2,122,2_inv_yhom_fobj_isiso,"['inv', 'yhom', 'fobj', 'isiso', 'app', 'xinv', 'yinv', 'finv', 'tensor', 'fmap']","['lemma naturality_1 (α : F ≅ G) (f : X ⟶ Y) :\n  α.inv.app X ≫ F.map f ≫ α.hom.app Y = G.map f', 'lemma pentagon_hom_inv_inv_inv_inv (f : a ⟶ b) (g : b ⟶ c) (h : c ⟶ d) (i : d ⟶ e) :\n  f ◁ (α_ g h i).hom ≫ (α_ f g (h ≫ i)).inv ≫ (α_ (f ≫ g) h i).inv =\n    (α_ f (g ≫ h) i).inv ≫ (α_ f g h).inv ▷ i', 'lemma app_inv {F G : C ⥤ D} (α : F ≅ G) (X : C) : (α.app X).inv = α.inv.app X']"
4,3,91,3_map_pmap_optionmap_amap,"['map', 'pmap', 'optionmap', 'amap', 'mapmap', 'prodmap', 'compmap', 'ret', 'fmap', 'bindret']","['lemma map_as_map {F : C → D} [functorial.{v₁ v₂} F] {X Y : C} {f : X ⟶ Y} :\n  functorial.map.{v₁ v₂} f = map F f', 'theorem map_add (f : α → β) (s t) : map f (s + t) = map f s + map f t', 'theorem map_cons (f : α → β) (a s) : map f (a ::ₘ s) = f a ::ₘ map f s']"
5,4,87,4_read_sbtw_char_ext,"['read', 'sbtw', 'char', 'ext', 'pwfilter', 'equivaddleft', 'punit', 'btw', 'right', 'dval']","['lemma read_write_of_ne (a : array n α) {i j : fin n} (v : α) : i ≠ j → read (write a i v) j = read a j', 'lemma ext {a b : d_array n α} (h : ∀ i, read a i = read b i) : a = b', 'lemma ext {a b : array n α} (h : ∀ i, read a i = read b i) : a = b']"
6,5,82,5_iic_iio_projiic_setiic,"['iic', 'iio', 'projiic', 'setiic', 'iicinfi', 'iicinfhom', 'ih', 'insertrec', 'preimageiic', 'monotoneiio']","['lemma Iio_subset_Iic (h : a ≤ b) : Iio a ⊆ Iic b', 'lemma Iio_ssubset_Iic_self : Iio a ⊂ Iic a', 'lemma Iio_union_right : Iio a ∪ {a} = Iic a']"
7,6,81,6_clog_log_hn_hk,"['clog', 'log', 'hn', 'hk', 'coepow', 'hy', 'clogmonoright', 'clogofleftleone', 'clogoneright', 'powlepow']","['lemma clog_pos {b n : ℕ} (hb : 1 < b) (hn : 2 ≤ n) : 0 < clog b n', 'lemma clog_of_two_le {b n : ℕ} (hb : 1 < b) (hn : 2 ≤ n) :\n  clog b n = clog b ((n + b - 1)/b) + 1', 'lemma log_of_right_le_one (b : ℕ) {r : R} (hr : r ≤ 1) : log b r = -nat.clog b ⌈r⁻¹⌉₊']"
8,7,71,7_esymm_ftrans_etrans_symmap,"['esymm', 'ftrans', 'etrans', 'symmap', 'transapply', 'sym', 'ysymm', 'symmsymm', 'singleobj', 'selftranssymm']","['lemma map_map {α β γ : Type*} {n : ℕ} (g : β → γ) (f : α → β) (s : sym α n) :\n  sym.map g (sym.map f s) = sym.map (g ∘ f) s', 'lemma mem_map {n : ℕ} {f : α → β} {b : β} {l : sym α n} :\n  b ∈ sym.map f l ↔ ∃ a, a ∈ l ∧ f a = b', 'lemma map_id {α : Type*} {n : ℕ} (s : sym α n) : sym.map id s = s']"
9,8,68,8_ll_al_alternatingprod_list,"['ll', 'al', 'alternatingprod', 'list', 'xl', 'sublistappendright', 'at', 'length', 'bfactors', 'rdropwhile']","['theorem sublist_or_mem_of_sublist {l l₁ l₂ : list α} {a : α} (h : l <+ l₁ ++ a::l₂) :\n  l <+ l₁ ++ l₂ ∨ a ∈ l', 'theorem perm_middle {a : α} : ∀ {l₁ l₂ : list α}, l₁++a::l₂ ~ a::(l₁++l₂)', 'theorem perm_append_right_iff {l₁ l₂ : list α} (l) : l₁++l ~ l₂++l ↔ l₁ ~ l₂']"
10,9,68,9_pure_traverse_lastfun_freesemigroup,"['pure', 'traverse', 'lastfun', 'freesemigroup', 'fs', 'freemagma', 'terminates', 'compmk', 'eqv', 'equivtraverse']","['lemma preserves_pure {α} : ∀ (x : α), η (pure x) = pure x', 'lemma pure_seq {f : α → β} {x : free_semigroup α} :\n  pure f <*> x = f <$> x', ""lemma traverse_nil : traverse f ([] : list α') = (pure [] : F (list β'))""]"
11,10,68,10_prodcomm_prodswap_p1_tnonempty,"['prodcomm', 'prodswap', 'p1', 'tnonempty', 'q1', 'p2', 'coeprodcomm', 'equivprodassoc', 'range', 'prodmonoleft']","['lemma curry_symm_apply (f : α →o β →o γ) (x : α × β) : curry.symm f x = f x.1 x.2', 'lemma prod_univ_range_eq {m₂ : β → δ} :\n  (univ : set α) ×ˢ (range m₂) = range (λ p : α × β, (p.1, m₂ p.2))', 'lemma prod_range_univ_eq {m₁ : α → γ} :\n  (range m₁) ×ˢ (univ : set β) = range (λ p : α × β, (m₁ p.1, p.2))']"
12,11,67,11_insert_lt_sbunion_minsert,"['insert', 'lt', 'sbunion', 'minsert', 'isstrictweakorder', 'tinsert', 'meminsertofmem', 'rbmap', 'ordnodeinsert', 'vfind']","['theorem insert_diff_singleton {a : α} {s : set α} :\n  insert a (s \\ {a}) = insert a s', ""theorem powerset_insert (s : set α) (a : α) :\n  𝒫 (insert a s) = 𝒫 s ∪ (insert a '' 𝒫 s)"", 'lemma insert_idem (a : α) (s : set α) : insert a (insert a s) = insert a s']"
13,12,65,12_min_max_minfac_k2,"['min', 'max', 'minfac', 'k2', 'eqleafofmineqnone', 'minleiff', 'coemin', 'factorshelper', 'minimum', 'natminfac']","['lemma min_self (a : α) : min a a = a', 'lemma min_top_left [order_top α] (a : α) : min ⊤ a = a', 'lemma min_left_commutative : left_commutative (min : α → α → α)']"
14,13,63,13_bodd_orderedring_ring_1tonat,"['bodd', 'orderedring', 'ring', '1tonat', 'mulposofnegofneg', 'negposofneg', 'intcastne', 'negdivofdvd', 'nonposofnegnonneg', 'ofinteqcast']","[""theorem int_cast_ne {α} [ring α] [char_zero α] (a b : ℤ) (a' b' : α)\n  (ha : ↑a = a') (hb : ↑b = b') (h : a ≠ b) : a' ≠ b'"", 'lemma bodd_mul (m n : ℤ) : bodd (m * n) = bodd m && bodd n', 'lemma bodd_neg (n : ℤ) : bodd (-n) = bodd n']"
15,14,63,14_iscomplemented_coesup_supapply_abs,"['iscomplemented', 'coesup', 'supapply', 'abs', 'closuresupclosure', 'supequnion', 'lesupright', 'closuresupclosureright', 'lesupleft', 'mapsup']","['lemma sup_comm (a b : cau_seq α abs) : a ⊔ b = b ⊔ a', 'lemma le_sup_left {a b : cau_seq α abs} : a ≤ a ⊔ b', 'lemma sup_eq_right {a b : cau_seq α abs} (h : a ≤ b) :\n  a ⊔ b ≈ b']"
16,15,62,15_t1_t2_addlecancellable_lmodifynthtail,"['t1', 't2', 'addlecancellable', 'lmodifynthtail', 'vechead', 'e2', 'e1', 't2val', 'powsub', 'tsubeqiffeqaddofle']","['lemma lt_aux_2 {n : nat} (h : 0 < n) : n - 1 < n', 'lemma val_sub {v : nat → int} {t1 t2 : term} :\n(sub t1 t2).val v = t1.val v - t2.val v', 'lemma sub_subst {α} [ring α] {n e1 e2 t1 t2 : α} (h1 : n * e1 = t1) (h2 : n * e2 = t2) :\n      n * (e1 - e2) = t1 - t2']"
17,16,62,16_ici_ioi_setioi_nomaxorder,"['ici', 'ioi', 'setioi', 'nomaxorder', 'preimagecoeici', 'iciextend', 'coe', 'setici', 'pred', 'withbot']","['lemma Ioi_subset_Ici (h : a ≤ b) : Ioi b ⊆ Ici a', 'lemma Ioi_subset_Ici_iff [densely_ordered α] : Ioi b ⊆ Ici a ↔ a ≤ b', 'lemma Ici_diff_Ioi_same : Ici a \\ Ioi a = {a}']"
18,17,56,17_mulposstrictmono_posmulstrictmono_posmulmono_a0,"['mulposstrictmono', 'posmulstrictmono', 'posmulmono', 'a0', 'b0', 'ha', 'contravariantclass', 'covariantclass', 'mulltiffltoneleft', 'invltdiviffltmul']","['lemma mul_lt_mul_of_nonneg_of_pos [pos_mul_mono α] [mul_pos_strict_mono α]\n  (h₁ : a < b) (h₂ : c ≤ d) (a0 : 0 ≤ a) (d0 : 0 < d) : a * c < b * d', 'lemma lt_mul_iff_one_lt_right\n  [pos_mul_strict_mono α] [pos_mul_reflect_lt α]\n  (a0 : 0 < a) :\n  a < a * b ↔ 1 < b', 'lemma lt_mul_of_lt_of_one_lt_of_pos [pos_mul_strict_mono α] [mul_pos_strict_mono α]\n  (bc : b < c) (ha : 1 < a) (a0 : 0 < a) (b0 : 0 < b) : b < c * a']"
19,18,56,18_ytoset_uniondiffcancel_card_finset,"['ytoset', 'uniondiffcancel', 'card', 'finset', 'sdiffsdiffself', 'memofmemdiff', 'tosetsdiff', 'sdiffsingletoneqerase', 'uniondiffcancelleft', 'uniondiffcancelright']","['lemma subset_union_elim {s : finset α} {t₁ t₂ : set α} (h : ↑s ⊆ t₁ ∪ t₂) :\n  ∃ s₁ s₂ : finset α, s₁ ∪ s₂ = s ∧ ↑s₁ ⊆ t₁ ∧ ↑s₂ ⊆ t₂ \\ t₁', 'lemma card_sdiff_add_card_eq_card {s t : finset α} (h : s ⊆ t) : card (t \\ s) + card s = card t', 'lemma coe_sdiff (s₁ s₂ : finset α) : ↑(s₁ \\ s₂) = (s₁ \\ s₂ : set α)']"
20,19,56,19_compmk_picongrright_applicative_optiontraverse,"['compmk', 'picongrright', 'applicative', 'optiontraverse', 'iscommapplicative', 'mulzerooneclass', 'naturality', 'bmap', 'ihom', 'ms']","['lemma embedding_congr_apply_trans {α₁ β₁ γ₁ α₂ β₂ γ₂ : Sort*}\n  (ea : α₁ ≃ α₂) (eb : β₁ ≃ β₂) (ec : γ₁ ≃ γ₂) (f : α₁ ↪ β₁) (g : β₁ ↪ γ₁) :\n  equiv.embedding_congr ea ec (f.trans g) =\n  (equiv.embedding_congr ea eb f).trans (equiv.embedding_congr eb ec g)', 'lemma naturality {G H : Type* → Type*}\n                [applicative G] [applicative H]\n                [is_comm_applicative G] [is_comm_applicative H]\n                (eta : applicative_transformation G H)\n                {α β : Type*} (f : α → G β) (x : multiset α) :\n  eta (traverse f x) = traverse (@eta _ ∘ f) x', 'lemma Pi_congr_right_trans {η : Type*}\n  {Ms Ns Ps : η → Type*} [Π j, has_mul (Ms j)] [Π j, has_mul (Ns j)]\n  [Π j, has_mul (Ps j)]\n  (es : ∀ j, Ms j ≃* Ns j) (fs : ∀ j, Ns j ≃* Ps j) :\n  (Pi_congr_right es).trans (Pi_congr_right fs) = (Pi_congr_right $ λ i, (es i).trans (fs i))']"
21,20,55,20_bit0_bit1_nbit0_castbit1,"['bit0', 'bit1', 'nbit0', 'castbit1', 'castbit0', 'nbit1', 'rootbit0', 'semiring', 'nbits', 'bit1val']","['lemma bit0_le_bit1 (n m : ℕ+) : (bit0 n) ≤ (bit1 m) ↔ (bit0 (n : ℕ)) ≤ (bit1 (m : ℕ))', 'theorem lt_bit0_bit1 {α} [linear_ordered_semiring α] (a b : α) (h : a ≤ b) : bit0 a < bit1 b', 'theorem lt_bit1_bit0 {α} [linear_ordered_semiring α] (a b : α) (h : a + 1 ≤ b) : bit1 a < bit0 b']"
22,21,55,21_sentries_closure_rimage_t1,"['sentries', 'closure', 'rimage', 't1', 'eisimage', 'alist', 'memunion', 'closureunion', 'forallmemunion', 'mapunion']","['theorem mem_lookup_union {a} {b : β a} {s₁ s₂ : alist β} :\n  b ∈ lookup a (s₁ ∪ s₂) ↔ b ∈ lookup a s₁ ∨ a ∉ s₁ ∧ b ∈ lookup a s₂', 'lemma closure_union (s t : set M) : closure (s ∪ t) = closure s ⊔ closure t', 'lemma closure_union (s t : set M) : closure (s ∪ t) = closure s ⊔ closure t']"
23,22,53,22_fcomp_gcomp_infhom_compapply,"['fcomp', 'gcomp', 'infhom', 'compapply', 'compassoc', 'gwithtop', 'suphom', 'coecomp', 'hmn', 'latticehom']","['lemma sum_comp_inr {P Q R : D} (f : (inr P : C ⊕ D) ⟶ inr Q)\n  (g : (inr Q : C ⊕ D) ⟶ inr R) :\n  @category_struct.comp _ _ P Q R (f : P ⟶ Q) (g : Q ⟶ R) =\n  @category_struct.comp _ _ (inr P) (inr Q) (inr R) (f : P ⟶ Q) (g : Q ⟶ R)', 'lemma comp_apply (hnp : β →+* γ) (hmn : α →+* β) (x : α) : (hnp.comp hmn : α → γ) x =\n  (hnp (hmn x))', 'lemma coe_comp (hnp : β →+* γ) (hmn : α →+* β) : (hnp.comp hmn : α → γ) = hnp ∘ hmn']"
24,23,53,23_id_coeid_idapply_mapid,"['id', 'coeid', 'idapply', 'mapid', 'af', 'idcomp', 'pfunid', 'idmk', 'compid', 'compfunctor']","['lemma id_apply (x : M) :\n  @id R M _ _ _ x = x', 'lemma coe_one : ⇑(1 : r ≃r r) = id', 'lemma id_apply (x : R) : mul_semiring_action_hom.id M x = x']"
25,24,50,24_tonat_mkpnat_subnatnat_addnat,"['tonat', 'mkpnat', 'subnatnat', 'addnat', 'atonat', 'subnat', 'succpnat', 'ofnat', 'mknat', 'bitvecofnat']","['lemma of_nat_to_nat  {n : ℕ} (v : bitvec n) : bitvec.of_nat _ v.to_nat = v', 'lemma to_nat_lt {n : ℕ} (v : bitvec n) : v.to_nat < 2^n', 'theorem to_nat_of_nat {k n : ℕ}\n: bitvec.to_nat (bitvec.of_nat k n) = n % 2 ^ k']"
26,25,49,25_wellfounded_ltofinset_ttofinset_memtofinset,"['wellfounded', 'ltofinset', 'ttofinset', 'memtofinset', 'stofinset', 'irreducible', 'minfachelper', 'tofinsetunion', 'mtofinsetcard', 'wellfoundedlt']","['theorem irreducible_iff_prime {p : ℕ} : irreducible p ↔ _root_.prime p', 'theorem not_irreducible_one [monoid α] : ¬ irreducible (1 : α)', 'lemma associated.irreducible [monoid α] {p q : α} (h : p ~ᵤ q)\n  (hp : irreducible p) : irreducible q']"
27,26,49,26_diveqself_divself_hc_cancelcommmonoidwithzero,"['diveqself', 'divself', 'hc', 'cancelcommmonoidwithzero', 'diveqmulonediv', 'divadddiv', 'divrightinj', 'cardleone', 'mulnezero', 'onedivdiv']","['lemma mul_le_mul_right₀ (hc : c ≠ 0) : a * c ≤ b * c ↔ a ≤ b', 'lemma eq_div_iff_mul_eq (hc : c ≠ 0) : a = b / c ↔ a * c = b', 'lemma div_le_iff₀ (hc : c ≠ 0) : a / c ≤ b ↔ a ≤ b*c']"
28,27,48,27_quotient_quotmk_quotientmk_quot,"['quotient', 'quotmk', 'quotientmk', 'quot', 'iscoatom', 'setoidr', 'inductionon', 'setoid', 'eq', 'ker']","[""lemma induction_on₂' {p : quotient s₁ → quotient s₂ → Prop} (q₁ : quotient s₁)\n  (q₂ : quotient s₂) (h : ∀ a₁ a₂, p (quotient.mk' a₁) (quotient.mk' a₂)) : p q₁ q₂"", 'theorem quotient.rep_spec (q : quotient s) : ⟦q.rep⟧ = q', 'lemma induction_on₂\n   {φ : quotient s₁ → quotient s₂ → Prop} (q₁ : quotient s₁) (q₂ : quotient s₂) (h : ∀ a b, φ ⟦a⟧ ⟦b⟧) : φ q₁ q₂']"
29,28,47,28_gcd_sgcd_gcdmonoid_gcdmulright,"['gcd', 'sgcd', 'gcdmonoid', 'gcdmulright', 'gcdeqzeroiff', 'gcdcomm', 'gcda', 'gcdb', 'associated', 'gcdself']","['theorem gcd_comm (m n : ℕ) : gcd m n = gcd n m', 'theorem gcd_mul_left (m n k : ℕ) : gcd (m * n) (m * k) = m * gcd n k', 'theorem gcd_mul_right (m n k : ℕ) : gcd (m * n) (k * n) = gcd m k * n']"
30,29,47,29_serase_lerase_erase_terase,"['serase', 'lerase', 'erase', 'terase', 'lerasep', 'pa', 'merase', 'erasep', 'tsize', 'afind']","['theorem insert_erase {a : α} {s : finset α} (h : a ∈ s) : insert a (erase s a) = s', 'theorem insert_erase_subset (a : α) (s : finset α) : s ⊆ insert a (erase s a)', 'lemma erase_insert_eq_erase (s : finset α) (a : α) :\n  (insert a s).erase a = s.erase a']"
31,30,47,30_functioninjective_injective_leftinverse_mkinjective,"['functioninjective', 'injective', 'leftinverse', 'mkinjective', 'isassociative', 'coeinjective', 'isdomain', 'coefn', 'equivmap', 'uncurry']","['lemma coe_injective {α β} : @function.injective (α ↪ β) (α → β) coe_fn', 'lemma group_with_zero.mul_left_injective (h : x ≠ 0) :\n  function.injective (λ y, x * y)', 'lemma group_with_zero.mul_right_injective (h : x ≠ 0) :\n  function.injective (λ y, y * x)']"
32,31,46,31_withtop_coetop_boundedorder_hastop,"['withtop', 'coetop', 'boundedorder', 'hastop', 'nonemptyinterval', 'topmul', 'topapply', 'upperset', 'interval', 'topadd']","['lemma principal_top : principal (⊤ : P) = ⊤', 'lemma coe_top [bounded_order α] : ((⊤ : interval α) : set α) = univ', 'lemma coe_top_interval [bounded_order α] : ((⊤ : nonempty_interval α) : interval α) = ⊤']"
33,32,45,32_orderbot_coebot_botapply_hasbot,"['orderbot', 'coebot', 'botapply', 'hasbot', 'hbot', 'mker', 'complbot', 'lowerset', 'concept', 'hasle']","[""lemma coe_mker (f : F) : (mker f : set M) = (f : M → N) ⁻¹' {1}"", 'lemma mk_eq_bot_iff [order_bot α] [order_bot (subtype p)] (hbot : p ⊥) {x : α} (hx : p x) :\n  (⟨x, hx⟩ : subtype p) = ⊥ ↔ x = ⊥', 'lemma mk_bot [order_bot α] [order_bot (subtype p)] (hbot : p ⊥) : mk ⊥ hbot = ⊥']"
34,33,44,33_hassmul_addcommmonoid_module_coensmul,"['hassmul', 'addcommmonoid', 'module', 'coensmul', 'smulapply', 'supports', 'uprod', 'setlike', 'divisionsemiring', 'semiring']","['lemma map_inv_nat_cast_smul [add_comm_monoid M] [add_comm_monoid M₂] {F : Type*}\n  [add_monoid_hom_class F M M₂] (f : F)\n  (R S : Type*) [division_semiring R] [division_semiring S] [module R M] [module S M₂]\n  (n : ℕ) (x : M) :\n  f ((n⁻¹ : R) • x) = (n⁻¹ : S) • f x', 'lemma map_nat_cast_smul [add_comm_monoid M] [add_comm_monoid M₂] {F : Type*}\n  [add_monoid_hom_class F M M₂] (f : F)\n  (R S : Type*) [semiring R] [semiring S] [module R M] [module S M₂] (x : ℕ) (a : M) :\n  f ((x : R) • a) = (x : S) • f a', 'lemma map_smul_of_tower {R S : Type*} [semiring S] [has_smul R M]\n  [module S M] [has_smul R M₂] [module S M₂]\n  [compatible_smul M M₂ R S] (fₗ : M →ₗ[S] M₂) (c : R) (x : M) :\n  fₗ (c • x) = c • fₗ x']"
35,34,44,34_ioc_imagecoeioc_preimagecoeioc_pimulsingle,"['ioc', 'imagecoeioc', 'preimagecoeioc', 'pimulsingle', 'setioc', 'max', 'iic', 'memioc', 'nonemptyioc', 'pairwisedisjointioczpow']","['lemma smul_Ioc : r • Ioc a b = Ioc (r • a) (r • b)', ""lemma preimage_const_mul_Ioc (a b : α) {c : α} (h : 0 < c) :\n  ((*) c) ⁻¹' (Ioc a b) = Ioc (a / c) (b / c)"", 'lemma Ioc_subset_Ioc_right (h : b₁ ≤ b₂) : Ioc a b₁ ⊆ Ioc a b₂']"
36,35,44,35_icc_ordconnectedcomponent_seticc_projicc,"['icc', 'ordconnectedcomponent', 'seticc', 'projicc', 'iccextend', 'rightmemicc2', 'ordconnected', 'ordseparatingset', 'cicc', 'hx']","['lemma ord_connected_Icc {a b : α} : ord_connected (Icc a b)', 'lemma uIcc_of_ge (h : b ≤ a) : [a, b] = Icc b a', 'lemma mul_le_left {x y : Icc (0:α) 1} : x * y ≤ x']"
37,36,44,36_hasinv_coeinv_invdef_xdown,"['hasinv', 'coeinv', 'invdef', 'xdown', 'withzero', 'isfixedpt', 'ismonoidhom', 'ismulhom', 'commgroup', 'inv']","['lemma coe_inv {f : cau_seq β abv} (hf) : ⇑(inv f hf) = f⁻¹', 'lemma inv {α β} [has_mul α] [comm_group β] {f : α → β} (hf : is_mul_hom f) :\n  is_mul_hom (λ a, (f a)⁻¹)', 'lemma inv {α β} [mul_one_class α] [comm_group β] {f : α → β} (hf : is_monoid_hom f) :\n  is_monoid_hom (λ a, (f a)⁻¹)']"
38,37,43,37_unop_op_unmop_funop,"['unop', 'op', 'unmop', 'funop', 'mop', 'commsq', 'opunop', 'gunmop', 'coyonedaobj', 'lprodunop']","['lemma unop_id_op {X : C} : (𝟙 (op X)).unop = 𝟙 X', 'lemma unop_op (x : α) : unop (op x) = x', 'lemma op_unop {X Y : C} (f : X ≅ Y) : f.op.unop = f']"
39,38,43,38_ico_setico_dx_dy,"['ico', 'setico', 'dx', 'dy', 'mfilter', 'hln', 'icc', 'preimagecoeicotop', 'interconsecutive', 'preimageconstsubico']","[""lemma preimage_const_add_Ico : (λ x, a + x) ⁻¹' (Ico b c) = Ico (b - a) (c - a)"", 'lemma Ico_subset_Ico_left (h : a₁ ≤ a₂) : Ico a₂ b ⊆ Ico a₁ b', 'lemma inter_consecutive (n m l : ℕ) : Ico n m ∩ Ico m l = []']"
40,39,42,39_odd_even_oddadd_issquare,"['odd', 'even', 'oddadd', 'issquare', 'constvadd', 'oddiffnoteven', 'yslength', 'oddsub', 'oddneg', 'xdom']","['theorem odd_add : odd (m + n) ↔ (odd m ↔ even n)', ""theorem even_add' : even (m + n) ↔ (odd m ↔ odd n)"", ""theorem odd_sub' : odd (m - n) ↔ (odd n ↔ even m)""]"
41,40,42,40_gcomp_fdual_dualcomp_gdualcomp,"['gcomp', 'fdual', 'dualcomp', 'gdualcomp', 'completelatticehom', 'boundedorderhom', 'supbothom', 'inftophom', 'symmdualcomp', 'cancelleft']","['lemma cancel_left {g : bounded_order_hom β γ} {f₁ f₂ : bounded_order_hom α β} (hg : injective g) :\n  g.comp f₁ = g.comp f₂ ↔ f₁ = f₂', 'lemma cancel_left {g : inf_top_hom β γ} {f₁ f₂ : inf_top_hom α β} (hg : injective g) :\n  g.comp f₁ = g.comp f₂ ↔ f₁ = f₂', 'lemma cancel_left {g : frame_hom β γ} {f₁ f₂ : frame_hom α β} (hg : injective g) :\n  g.comp f₁ = g.comp f₂ ↔ f₁ = f₂']"
42,41,42,41_antitoneon_eqon_surjon_invfunon,"['antitoneon', 'eqon', 'surjon', 'invfunon', 'monotoneon', 'strictmonoon', 'hg', 'bijon', 'seqon', 'injon']","['lemma strict_anti.comp_strict_anti_on (hg : strict_anti g) (hf : strict_anti_on f s) :\n  strict_mono_on (g ∘ f) s', 'lemma monotone_on.antivary_on (hf : monotone_on f s) (hg : antitone_on g s) :\n  antivary_on f g s', ""lemma strict_mono_on.mul_monotone' (hf : strict_mono_on f s) (hg : monotone_on g s) :\n  strict_mono_on (λ x, f x * g x) s""]"
43,42,41,42_semilatticeinf_mapinf_coeinf_meminfiff,"['semilatticeinf', 'mapinf', 'coeinf', 'meminfiff', 'meminf', 'srel', 'continuous', 'iscomplemented', 'tropical', 'tcomap']","['lemma mk_inf_mk {a b : α} (ha : is_complemented a) (hb : is_complemented b) :\n  (⟨a, ha⟩ ⊓ ⟨b, hb⟩ : complementeds α) = ⟨a ⊓ b, ha.inf hb⟩', 'lemma inf_eq_add : ((⊓) : tropical R → tropical R → tropical R) = (+)', 'lemma inf_continuous (f g : α →o β) (hf : continuous f) (hg : continuous g) : continuous (f ⊓ g)']"
44,43,40,43_inf_bddbelow_snonempty_lecinfiff,"['inf', 'bddbelow', 'snonempty', 'lecinfiff', 'complinf', 'infdef', 'hs', 'sup', 'ne', 'hasinf']","['lemma Inf_mul : Inf (s * t) = Inf s * Inf t', 'theorem Inf_diff_singleton_top (s : set α) : Inf (s \\ {⊤}) = Inf s', 'theorem Inf_union {s t : set α} : Inf (s ∪ t) = Inf s ⊓ Inf t']"
45,44,40,44_mapneg_ta_negapply_coeneg,"['mapneg', 'ta', 'negapply', 'coeneg', 'smulneg', 'mapnegone', 'ps', 'ring', 'nonassocring', 'negempty']","['theorem mul_neg_pos {α} [ring α] (a b c : α) (h : a * b = c) : -a * b = -c', 'lemma subst_into_neg {α} [has_neg α] (a ta t : α) (pra : a = ta) (prt : -ta = t) : -a = t', ""lemma negate_pf {α} [ring α] {ps ps' : α} : (-1) * ps = ps' → -ps = ps'""]"
46,45,40,45_chainclosure_ub_succchain_lowerclosure,"['chainclosure', 'ub', 'succchain', 'lowerclosure', 'unionmono', 'npairwise', 'coesubset', 'set', 'cnonempty', 'ischain']","[""lemma preimage_subset_iff {A : set α} {B : set β} {f : α → β} :\n  f⁻¹' B ⊆ A ↔ (∀ a : α, f a ∈ B → a ∈ A)"", 'lemma zorn_subset_nonempty (S : set (set α))\n  (H : ∀ c ⊆ S, is_chain (⊆) c → c.nonempty → ∃ ub ∈ S, ∀ s ∈ c, s ⊆ ub) (x) (hx : x ∈ S) :\n  ∃ m ∈ S, x ⊆ m ∧ ∀ a ∈ S, m ⊆ a → a = m', 'lemma zorn_subset (S : set (set α)) (h : ∀ c ⊆ S, is_chain (⊆) c → ∃ ub ∈ S, ∀ s ∈ c, s ⊆ ub) :\n  ∃ m ∈ S, ∀ a ∈ S, m ⊆ a → a = m']"
47,46,39,46_iinsertnth_nth_isuccabove_insertnth,"['iinsertnth', 'nth', 'isuccabove', 'insertnth', 'llength', 'fin', 'lnth', 'removenthinsertnth', 'linth', 'contractnth']","['theorem nth_update_nth_eq (a : α) (n) (l : list α) :\n  nth (update_nth l n a) n = (λ _, a) <$> nth l n', 'theorem nth_modify_nth_eq (f : α → α) (n) (l : list α) :\n  nth (modify_nth f n l) n = f <$> nth l n', 'theorem nth_of_fn {n} (f : fin n → α) (i) :\n  nth (of_fn f) i = of_fn_nth_val f i']"
48,47,39,47_lpairwise_multiset_spairwise_ndunion,"['lpairwise', 'multiset', 'spairwise', 'ndunion', 'sinf', 'ndinsert', 'pairwise', 'nodup', 'multisetpairwise', 'card']","['theorem cons_ndunion (s t : multiset α) (a : α) :\n  ndunion (a ::ₘ s) t = ndinsert a (ndunion s t)', 'theorem ndunion_eq_union {s t : multiset α} (d : nodup s) : ndunion s t = s ∪ t', 'lemma nodup.ndunion (s : multiset α) {t : multiset α} : nodup t → nodup (ndunion s t)']"
49,48,39,48_toboolring_true_false_p2,"['toboolring', 'true', 'false', 'p2', 'p1', 'not', 'implies', 'countable', 'refl', 'refltransgen']","['lemma false_of_a_eq_not_a {a : Prop} (h : a = not a) : false', 'lemma vsub_right_cancel_iff {p1 p2 p : P} : p -ᵥ p1 = p -ᵥ p2 ↔ p1 = p2', 'lemma vsub_left_cancel_iff {p1 p2 p : P} : (p1 -ᵥ p) = p2 -ᵥ p ↔ p1 = p2']"
50,49,39,49_inr_suminr_suminl_inl,"['inr', 'suminr', 'suminl', 'inl', 'sumassoc', 'equivsetsumcompl', 'sumelim', 'ffix', 'eobj', 'inverseassociator']","['lemma inverse_associator_map_inr_inl {X Y : D} (f : inr (inl X) ⟶ inr (inl Y)) :\n  (inverse_associator C D E).map f = f', 'theorem inl_ne_inr {a : α} {b : β} : inl a ≠ inr b.', 'lemma sum_assoc_apply_inl_inr {α β γ} (b) : sum_assoc α β γ (inl (inr b)) = inr (inl b)']"
51,50,39,50_head_tail_lhead_tails,"['head', 'tail', 'lhead', 'tails', 'inhabited', 'iterate', 'tailcons', 'stream', 'length', 'ltailsum']","['theorem tail_inits (s : stream α) :\n  tail (inits s) = inits_core [head s, head (tail s)] (tail (tail s))', ""lemma eq_cons_of_mem_head' {x : α} : ∀ {l : list α}, x ∈ l.head' → l = x::tail l"", 'theorem interleave_eq (s₁ s₂ : stream α) : s₁ ⋈ s₂ = head s₁ :: head s₂ :: (tail s₁ ⋈ tail s₂)']"
52,51,38,51_image2_simage_xtoset_essimage,"['image2', 'simage', 'xtoset', 'essimage', 'spimage', 'imageid', 'tpimage', 'image', 'timage', 'preimage']","[""lemma Union_image_right : (⋃ b ∈ t, (λ a, f a b) '' s) = image2 f s t"", 'lemma image2_Union_right (s : set α) (t : ι → set β) :\n  image2 f s (⋃ i, t i) = ⋃ i, image2 f s (t i)', 'lemma image2_subset_iff {u : set γ} :\n  image2 f s t ⊆ u ↔ ∀ (x ∈ s) (y ∈ t), f x y ∈ u']"
53,52,37,52_iscoprime_coprime_iscovering_pp,"['iscoprime', 'coprime', 'iscovering', 'pp', 'mcoprime', 'natcoprime', 'prime', 'h1', 'h2', 'iscoprimeofmulrightleft']","['theorem coprime_zero_left (n : ℕ) : coprime 0 n ↔ n = 1', 'theorem coprime.coprime_dvd_right {m k n : ℕ} (H1 : n ∣ m) (H2 : coprime k m) : coprime k n', 'theorem coprime.mul_right {k m n : ℕ} (H1 : coprime k m) (H2 : coprime k n) : coprime k (m * n)']"
54,53,37,53_isunit_divdivself_eqmulofdiveq_diveqofeqmul,"['isunit', 'divdivself', 'eqmulofdiveq', 'diveqofeqmul', 'ma', 'mb', 'divunion', 'divleftinj', 'divdivcancelleft', 'zerodivsubset']","['lemma mul_eq_mul_of_div_eq_div (hb : is_unit b) (hd : is_unit d) (a c : α)\n  (h : a / b = c / d) : a * d = c * b', 'lemma div_left_inj {a b d : ℤ} (hda : d ∣ a) (hdb : d ∣ b) : a / d = b / d ↔ a = b', 'lemma div_mem_div [has_div α] (a b : part α) (ma mb : α) (ha : ma ∈ a) (hb : mb ∈ b) :\n  ma / mb ∈ a / b']"
55,54,37,54_zeromod_ma_mb_moddef,"['zeromod', 'ma', 'mb', 'moddef', 'bval', 'nat', 'modself', 'dvdmodiff', 'intmodnateqsubmulfloorratdiv', 'modeqifflt']","['lemma mod_eq_sub_mod {a b : nat} (h : b ≤ a) : a % b = (a - b) % b', 'lemma odd_mul_odd_div_two {m n : ℕ} (hm1 : m % 2 = 1) (hn1 : n % 2 = 1) :\n  (m * n) / 2 = m * (n / 2) + m / 2', 'lemma mod_mem_mod [has_mod α] (a b : part α) (ma mb : α) (ha : ma ∈ a) (hb : mb ∈ b) :\n  ma % mb ∈ a % b']"
56,55,37,55_mulposmono_covariantclass_a0_posmulmonorev,"['mulposmono', 'covariantclass', 'a0', 'posmulmonorev', 'posmulmono', 'mullemuliffright', 'mulposmonorev', 'hb', 'swap', 'bc']","['lemma le_mul_iff_one_le_right\n  [pos_mul_mono α] [pos_mul_mono_rev α]\n  (a0 : 0 < a) :\n  a ≤ a * b ↔ 1 ≤ b', 'lemma mul_le_mul_left [pos_mul_mono α] [pos_mul_mono_rev α]\n  (a0 : 0 < a) :\n  a * b ≤ a * c ↔ b ≤ c', 'lemma le_of_mul_le_mul_left [pos_mul_mono_rev α] (bc : a * b ≤ a * c) (a0 : 0 < a) : b ≤ c']"
57,56,36,56_muldivassoc_halfpos_diveqoflt_coenatdiv,"['muldivassoc', 'halfpos', 'diveqoflt', 'coenatdiv', 'coedivnat', 'coenatdivself', 'castdiv', 'diveqofeqmulright', 'divdvdofdvd', 'diveqofltle']","['lemma lt_div_iff_mul_lt {n d : ℕ} (hnd : d ∣ n) (a : ℕ) : a < n / d ↔ d * a < n', 'lemma lt_mul_div_succ (m : ℕ) {n : ℕ} (n0 : 0 < n) : m < n * ((m / n) + 1)', 'lemma add_div {a b c : ℕ} (hc0 : 0 < c) : (a + b) / c = a / c + b / c +\n  if c ≤ a % c + b % c then 1 else 0']"
58,57,36,57_infi_coeinfi_infisubtype_bddbelow,"['infi', 'coeinfi', 'infisubtype', 'bddbelow', 'hasinf', 'functionswap', 'upperset', 'subsemigroup', 'fcomap', 'cinfileofle']","['lemma u_infi {f : ι → β} : u (infi f) = ⨅ i, u (f i)', 'lemma le_mul_cinfi [covariant_class α α (*) (≤)] {a : α} {g : α} {h : ι → α}\n  (H : ∀ j, a ≤ g * h j) : a ≤ g * infi h', 'lemma lt_infi_iff : a < infi f ↔ ∃ b, a < b ∧ ∀ i, b ≤ f i']"
59,58,36,58_scard_paircomm_eqsingletoniffuniquemem_cardeqthree,"['scard', 'paircomm', 'eqsingletoniffuniquemem', 'cardeqthree', 'multiset', 'addsingletoneqiff', 'injonsingleton', 'infipair', 'imagepair', 'imageone']","['theorem mem_singleton_self (a : α) : a ∈ ({a} : multiset α)', 'theorem singleton_le {a : α} {s : multiset α} : {a} ≤ s ↔ a ∈ s', 'theorem pair_comm (x y : α) : ({x, y} : multiset α) = {y, x}']"
60,59,36,59_injective_functioninjective_ofinjective_mapinjective,"['injective', 'functioninjective', 'ofinjective', 'mapinjective', 'consrightinjective', 'injectiveiff', 'mulrightinjective', 'hfsymm', 'cons', 'summap']","['lemma mul_right_injective (h : is_unit a) : injective ((*) a)', 'lemma range_splitting_injective (f : α → β) : injective (range_splitting f)', 'lemma mul_single_injective (i : I) : function.injective (mul_single i : f i → Π i, f i)']"
61,60,35,60_sup_bddabove_hassup_snonempty,"['sup', 'bddabove', 'hassup', 'snonempty', 'csuple', 'ssup', 'csupleiff', 'hs', 'memsupiff', 'hbdd']","['lemma Sup_inf_eq : Sup s ⊓ b = ⨆ a ∈ s, a ⊓ b', 'lemma mem_Sup_iff : a ∈ Sup S ↔ ∀ s ∈ S, a ∈ s', 'lemma mem_Sup_iff : a ∈ Sup S ↔ ∃ s ∈ S, a ∈ s']"
62,61,34,61_ioo_hmem_pimulsingle_iio,"['ioo', 'hmem', 'pimulsingle', 'iio', 'ioi', 'ioc', 'ico', 'eqrightormemiooofmemioc', 'iocsubsetiooright', 'preimagecoeiootop']","['lemma bdd_above_Ioo : bdd_above (Ioo a b)', 'lemma wcovby.Ioo_eq (h : a ⩿ b) : Ioo a b = ∅', 'lemma covby_iff_Ioo_eq : a ⋖ b ↔ a < b ∧ Ioo a b = ∅']"
63,62,34,62_ismax_ismin_predn_pred,"['ismax', 'ismin', 'predn', 'pred', 'succ', 'ispredlimit', 'iscompl', 'notismintop', 'iscompltopbot', 'ispredlimitiffofnomin']","['lemma le_pred_iff_of_not_is_min (ha : ¬ is_min a) : b ≤ pred a ↔ b < a', 'lemma pred_lt_iff_of_not_is_min (ha : ¬ is_min a) : pred a < b ↔ a ≤ b', 'lemma succ_pred_of_not_is_min (h : ¬ is_min a) : succ (pred a) = a']"
64,63,34,63_qdenom_rdenom_qnum_rnum,"['qdenom', 'rdenom', 'qnum', 'rnum', 'mk', 'd0', 'abs', 'archimedean', 'anum', 'addnumdenom']","['theorem mk_le_of_forall_le {f : cau_seq ℚ abs} {x : ℝ}\n  (h : ∃ i, ∀ j ≥ i, (f j : ℝ) ≤ x) : mk f ≤ x', 'theorem mk_near_of_forall_near {f : cau_seq ℚ abs} {x : ℝ} {ε : ℝ}\n  (H : ∃ i, ∀ j ≥ i, |(f j : ℝ) - x| ≤ ε) : |mk f - x| ≤ ε', 'theorem le_mk_of_forall_le {f : cau_seq ℚ abs} :\n  (∃ i, ∀ j ≥ i, x ≤ f j) → x ≤ mk f']"
65,64,34,64_round_odd_even_divtwomultwoaddoneofodd,"['round', 'odd', 'even', 'divtwomultwoaddoneofodd', 'zeroleoneclass', 'n2', 'zeroletwo', 'primeoddofnetwo', 'primeeqtwoorodd', 'roundzero']","['lemma round_neg_two_inv : round (-2⁻¹ : α) = 0', 'lemma round_two_inv : round (2⁻¹ : α) = 1', 'lemma round_zero : round (0 : α) = 0']"
66,65,33,65_intermono_set_sinterunion_intersubset,"['intermono', 'set', 'sinterunion', 'intersubset', 'intercongr', 'xnonempty', 'meminter', 'classu', 'intercoeset', 'binterand']","[""theorem sInter_image (f : α → set β) (s : set α) : ⋂₀ (f '' s) = ⋂ x ∈ s, f x"", 'theorem sInter_union (S T : set (set α)) : ⋂₀ (S ∪ T) = ⋂₀ S ∩ ⋂₀ T', 'theorem sInter_Union (s : ι → set (set α)) : ⋂₀ (⋃ i, s i) = ⋂ i, ⋂₀ s i']"
67,66,33,66_upperbounds_lowerbounds_bddbelow_memupperboundsimage,"['upperbounds', 'lowerbounds', 'bddbelow', 'memupperboundsimage', 'memlowerboundsimage', 'memlowerboundsimageself', 'hat', 'has', 'bddabove', 'image2']","['lemma mem_lower_bounds_image2_of_mem_lower_bounds_of_mem_lower_bounds (ha : a ∈ upper_bounds s)\n  (hb : b ∈ lower_bounds t) : f a b ∈ lower_bounds (image2 f s t)', ""lemma mem_lower_bounds_image (Has : a ∈ lower_bounds s) (Hat : a ∈ t) :\n  f a ∈ lower_bounds (f '' s)"", ""lemma mem_upper_bounds_image (Has : a ∈ upper_bounds s) (Hat : a ∈ t) :\n  f a ∈ upper_bounds (f '' s)""]"
68,67,32,67_tcard_finset_sbunion_toffdiag,"['tcard', 'finset', 'sbunion', 'toffdiag', 'intersubsetleft', 'timage', 's1', 'bunioninter', 'cardinteraddcardunion', 'interuniv']","['theorem inter_bUnion (t : finset β) (s : finset α) (f : α → finset β) :\n  t ∩ s.bUnion f = s.bUnion (λ x, t ∩ f x)', 'theorem mem_of_mem_inter_right {a : α} {s₁ s₂ : finset α} (h : a ∈ s₁ ∩ s₂) :\n  a ∈ s₂', 'theorem inter_subset_left (s₁ s₂ : finset α) : s₁ ∩ s₂ ⊆ s₁']"
69,68,32,68_tdown_unionuniondistribright_maximals_mb,"['tdown', 'unionuniondistribright', 'maximals', 'mb', 'ma', 'setsemiring', 'sdown', 'soffdiag', 'ndunion', 'unionleftidem']","['theorem ndunion_le_union (s t : multiset α) : ndunion s t ≤ s ∪ t', 'lemma maximals_union : maximals r (s ∪ t) ⊆ maximals r s ∪ maximals r t', 'lemma union_mem_union [has_union α] (a b : part α) (ma mb : α) (ha : ma ∈ a) (hb : mb ∈ b) :\n  ma ∪ mb ∈ a ∪ b']"
70,69,32,69_subsingleton_subsingletoniff_nontrivial_notsubsingleton,"['subsingleton', 'subsingletoniff', 'nontrivial', 'notsubsingleton', 'subsingletonuniv', 'eqreplicateofsubsingleton', 'issearchableofwellformed', 'choiceeq', 'addtorsorsubsingletoniff', 'subsingletonle']","['lemma subsingleton_iff : subsingleton α ↔ ∀ (x y : α), x = y', 'lemma subsingleton_iff_bot_eq_top :\n  (⊥ : α) = (⊤ : α) ↔ subsingleton α', 'lemma strict_mono [subsingleton α] (f : α → β) : strict_mono f']"
71,70,32,70_fcopy_coecopy_isempty_copyeq,"['fcopy', 'coecopy', 'isempty', 'copyeq', 'ltofltofle', 'aread', 'hashfn', 'bread', 'sz', 'notmemofempty']","['theorem equiv_empty (x : pSet) [is_empty x.type] : equiv x ∅', ""theorem insert_lemma (hash_fn : α → nat) {n n'}\n  {bkts : bucket_array α β n} {sz} (v : valid hash_fn bkts sz) :\n  valid hash_fn (bkts.foldl (mk_array _ [] : bucket_array α β n') (reinsert_aux hash_fn)) sz"", 'lemma copy_eq (u : αˣ) (val hv inv hi) :\n  u.copy val hv inv hi = u']"
72,71,32,71_prime_pp_cancelcommmonoidwithzero_dvdtrans,"['prime', 'pp', 'cancelcommmonoidwithzero', 'dvdtrans', 'pprime', 'primedvdofdvdpow', 'dvdtonat', 'dvdmulright', 'dvdmul', 'posofdvdofpos']","['theorem prime.not_dvd_mul {p m n : ℕ} (pp : prime p)\n  (Hm : ¬ p ∣ m) (Hn : ¬ p ∣ n) : ¬ p ∣ m * n', 'theorem prime.dvd_of_dvd_pow {p m n : ℕ} (pp : prime p) (h : p ∣ m^n) : p ∣ m', 'theorem prime.dvd_prime_iff_associated [cancel_comm_monoid_with_zero α]\n  {p q : α} (pp : prime p) (qp : prime q) :\n  p ∣ q ↔ associated p q']"
73,72,32,72_lxor_bxor_shiftl_shiftr,"['lxor', 'bxor', 'shiftl', 'shiftr', 'bit', 'bodd', 'memcenteriff', 'lor', 'boddadd', 'lxorbit']","['lemma lxor_bit : ∀ (a m b n),\n  lxor (bit a m) (bit b n) = bit (bxor a b) (lxor m n)', 'lemma lxor_bit (a m b n) : lxor (bit a m) (bit b n) = bit (bxor a b) (lxor m n)', 'lemma test_bit_lxor (m n k) : test_bit (lxor m n) k = bxor (test_bit m k) (test_bit n k)']"
74,73,31,73_bool_tobool_bit_ff,"['bool', 'tobool', 'bit', 'ff', 'tt', 'cond', 'pos', 'posnumbit', 'decidable', 'num']","['lemma univ_eq : (univ : set bool) = {ff, tt}', 'theorem eq_tt_of_bnot_eq_ff : ∀ {a : bool}, !a = ff → a = tt', 'theorem bitwise_to_nat {f : num → num → num} {g : bool → bool → bool}\n  (p : pos_num → pos_num → num)\n  (gff : g ff ff = ff)\n  (f00 : f 0 0 = 0)\n  (f0n : ∀ n, f 0 (pos n) = cond (g ff tt) (pos n) 0)\n  (fn0 : ∀ n, f (pos n) 0 = cond (g tt ff) (pos n) 0)\n  (fnn : ∀ m n, f (pos m) (pos n) = p m n)\n  (p11 : p 1 1 = cond (g tt tt) 1 0)\n  (p1b : ∀ b n, p 1 (pos_num.bit b n) = bit (g tt b) (cond (g ff tt) (pos n) 0))\n  (pb1 : ∀ a m, p (pos_num.bit a m) 1 = bit (g a tt) (cond (g tt ff) (pos m) 0))\n  (pbb : ∀ a b m n, p (pos_num.bit a m) (pos_num.bit b n) = bit (g a b) (p m n))\n  : ∀ m n : num, (f m n : ℕ) = nat.bitwise g m n']"
75,74,31,74_lcm_slcm_natlcm_ny,"['lcm', 'slcm', 'natlcm', 'ny', 'nx', 'normalizedgcdmonoid', 'lcmself', 'lcmdvd', 'dvdlcmright', 'lcmdvdiff']","['theorem dvd_lcm_left (m n : ℕ) : m ∣ lcm m n', 'theorem lcm_comm (m n : ℕ) : lcm m n = lcm n m', 'theorem lcm_comm [normalized_gcd_monoid α] (a b : α) : lcm a b = lcm b a']"
76,75,31,75_monotone_principal_antitone_monotoneapp,"['monotone', 'principal', 'antitone', 'monotoneapp', 'dabove', 'functionmonotoneeval', 'cardmono', 'antitonelam', 'floormono', 'functioneval']","['lemma monotone_lt {x : α}: monotone ((<) x)', 'lemma monotone : monotone (u ∘ l)', 'lemma monotone : monotone c']"
77,76,31,76_normalizefinlt_image_gb_ga,"['normalizefinlt', 'image', 'gb', 'ga', 'functionsemiconj', 'strictanti', 'nm', 'uicc', 'monotoneon', 'nk']","[""lemma _root_.monotone_on.image_uIcc_subset (hf : monotone_on f (uIcc a b)) :\n  f '' uIcc a b ⊆ uIcc (f a) (f b)"", 'lemma _root_.function.semiconj.finset_image [decidable_eq α] {f : α → β} {ga : α → α} {gb : β → β}\n  (h : function.semiconj f ga gb) :\n  function.semiconj (image f) (image ga) (image gb)', 'lemma _root_.function.semiconj.set_image {f : α → β} {ga : α → α} {gb : β → β}\n  (h : function.semiconj f ga gb) :\n  function.semiconj (image f) (image ga) (image gb)']"
78,77,31,77_disjoint_disjointmap_disjointsingleton_npairwisedisjoint,"['disjoint', 'disjointmap', 'disjointsingleton', 'npairwisedisjoint', 'spairwisedisjoint', 'pairwisedisjointfiber', 'disjointconsleft', 'disjointaddright', 'disjointappendleft', 'disjointofdisjointconsleft']","['lemma disjoint_of_disjoint_cons_left {l₁ l₂} : disjoint (a :: l₁) l₂ → disjoint l₁ l₂', 'lemma disjoint_supr_iff {f : ι → α} : disjoint a (⨆ i, f i) ↔ ∀ i, disjoint a (f i)', 'lemma disjoint_cons_left : disjoint (a :: l₁) l₂ ↔ a ∉ l₂ ∧ disjoint l₁ l₂']"
79,78,30,78_imageempty_bunionempty_alist_supempty,"['imageempty', 'bunionempty', 'alist', 'supempty', 'entries', 'cardempty', 'binterempty', 'emptysdiff', 'csupempty', 'emptyentries']","['theorem powerset_empty : 𝒫 (∅ : set α) = {∅}', 'theorem empty_entries : (∅ : alist β).entries = []', 'theorem empty_union {s : alist β} : (∅ : alist β) ∪ s = s']"
80,79,30,79_subsemigroup_tcomap_scomap_subsingleton,"['subsemigroup', 'tcomap', 'scomap', 'subsingleton', 'ssubsingleton', 'smap', 'fmap', 'permsubsingletoneqrefl', 'subsingletonfloorsemiring', 'comapmker']","[""lemma coe_map (f : M →ₙ* N) (S : subsemigroup M) :\n  (S.map f : set N) = f '' S"", 'lemma mem_map {f : M →ₙ* N} {S : subsemigroup M} {y : N} :\n  y ∈ S.map f ↔ ∃ x ∈ S, f x = y', ""lemma coe_inf (p p' : subsemigroup M) : ((p ⊓ p' : subsemigroup M) : set M) = p ∩ p'""]"
81,80,29,80_get_red_lreduceoption_getcolor,"['get', 'red', 'lreduceoption', 'getcolor', 'adom', 'blacknode', 'reduceoption', 'rednode', 'optionget', 'valbetween']","['lemma some_get : ∀ {x : option α} (h : is_some x), some (option.get h) = x', 'theorem get_eq_of_mem {a} : a ∈ s → get s = a', 'theorem get_eq_of_promises {a} : s ~> a → get s = a']"
82,81,29,81_pnatfind_natfind_find_findmin,"['pnatfind', 'natfind', 'find', 'findmin', 'finfind', 'findeqiff', 'findleiff', 'ltfindiff', 'fixapprox', 'exacti']","['theorem find_some (H : find p l = some a) : p a', 'lemma find_min : Π {n : ℕ} {p : fin n → Prop} [decidable_pred p] {i : fin n}\n  (hi : i ∈ by exactI fin.find p) {j : fin n} (hj : j < i), ¬ p j', 'lemma find_black_eq_find_red [decidable_rel lt] {l y r x} :\n  find lt (black_node l y r) x = find lt (red_node l y r) x']"
83,82,29,82_respequiv_as1_as2_resp,"['respequiv', 'as1', 'as2', 'resp', 'equiv', 'adjhomequiv', 'mulequivinv', 'equivmulright', 'gtop', 'star']","['theorem resp.equiv.euc : Π {n} {a b c : resp n},\n  resp.equiv a b → resp.equiv c b → resp.equiv a c', 'lemma eq_of_equiv : ∀ {as1 as2 : list α}, as1.length = as2.length →\n  equiv as1 as2 → as1 = as2', 'lemma equiv_symm : equiv as1 as2 → equiv as2 as1']"
84,83,29,83_foldl_foldr_lfoldl_listfoldr,"['foldl', 'foldr', 'lfoldl', 'listfoldr', 'fold', 'op', 'sfold', 'scanr', 'coefoldl', 'rightcommutative']","['theorem foldl1_eq_foldr1 : ∀ a b l, foldl f a (l++[b]) = foldr f b (a::l)', 'theorem foldl_eq_foldr : ∀ a l, foldl f a l = foldr f a l', 'theorem coe_foldr_swap (f : α → β → β) (H : left_commutative f) (b : β) (l : list α) :\n  foldr f H b l = l.foldl (λ x y, f y x) b']"
85,84,29,84_ts_permutationsaux_is_permutationsaux2,"['ts', 'permutationsaux', 'is', 'permutationsaux2', 'ys', 'permutations', 'cyclicpermutations', 'f2', 'id2', 'pointreflection']","['lemma map_permutations_aux (f : α → β) : ∀ (ts is : list α),\n  map (map f) (permutations_aux ts is) = permutations_aux (map f ts) (map f is)', 'theorem perm_of_mem_permutations_aux :\n  ∀ {ts is l : list α}, l ∈ permutations_aux ts is → l ~ ts ++ is', 'lemma permutations_aux_cons (t : α) (ts is : list α) :\n  permutations_aux (t :: ts) is = foldr (λy r, (permutations_aux2 t ts r y id).2)\n    (permutations_aux ts (t::is)) (permutations is)']"
86,85,29,85_unitsmk0_star_unitsembedproduct_unitspoweqpowmodtwo,"['unitsmk0', 'star', 'unitsembedproduct', 'unitspoweqpowmodtwo', 'tounitsinjective', 'unitsembedproductstar', 'unitsinvneg', 'unitofcoeunits', 'exists0', 'coestarinv']","['lemma exists0 {p : G₀ˣ → Prop} : (∃ g : G₀ˣ, p g) ↔ ∃ (g : G₀) (hg : g ≠ 0), p (units.mk0 g hg)', 'lemma coe_star_inv (u : Rˣ) : ↑(star u)⁻¹ = (star ↑u⁻¹ : R)', 'lemma coe_star (u : Rˣ) : ↑(star u) = (star ↑u : R)']"
87,86,29,86_preimageeqiffeqimage_imagesubset_imagemulright_linearmapclass,"['preimageeqiffeqimage', 'imagesubset', 'imagemulright', 'linearmapclass', 'mapstopreimage', 'preimagesunion', 'rootsetimageequiveqpreimagesymm', 'preimagesubsetpreimageiff', 'preimageunion', 'preimageimagepreimage']","[""lemma image_preimage {α β} (e : α ≃ β) (s : set β) : e '' (e ⁻¹' s) = s"", ""lemma preimage_subset_preimage_iff {s t : set α} {f : β → α} (hs : s ⊆ range f) :\n  f ⁻¹' s ⊆ f ⁻¹' t ↔ s ⊆ t"", ""lemma image_preimage_eq_iff {f : α → β} {s : set β} : f '' (f ⁻¹' s) = s ↔ s ⊆ range f""]"
88,87,29,87_supr_icompl_hassup_suprrange,"['supr', 'icompl', 'hassup', 'suprrange', 'complsupr', 'suprmono', 'bddabove', 'language', 'lowerset', 'addsupr']","['lemma csupr_le [nonempty ι] {f : ι → α} {c : α} (H : ∀ x, f x ≤ c) : supr f ≤ c', ""lemma csupr_mono' {ι'} {f : ι → α} {g : ι' → α} (hg : bdd_above (range g))\n  (h : ∀ i, ∃ i', f i ≤ g i') : supr f ≤ supr g"", 'lemma csupr_le_iff [nonempty ι] {f : ι → α} {a : α} (hf : bdd_above (range f)) :\n  supr f ≤ a ↔ ∀ i, f i ≤ a']"
89,88,29,88_ldiff_appendinjright_length_hl,"['ldiff', 'appendinjright', 'length', 'hl', 'eqrecon', 'vector3', 'bit', 'sublistsuffixofunion', 'subsetappendleft', 'appendnenilofnenilleft']","[""theorem append_inj_right' {s₁ s₂ t₁ t₂ : list α} (h : s₁ ++ t₁ = s₂ ++ t₂)\n  (hl : length t₁ = length t₂) : t₁ = t₂"", 'theorem append_inj_right {s₁ s₂ t₁ t₂ : list α} (h : s₁ ++ t₁ = s₂ ++ t₂)\n  (hl : length s₁ = length s₂) : t₁ = t₂', 'lemma ldiff_bit : ∀ (a m b n),\n  ldiff (bit a m) (bit b n) = bit (a && bnot b) (ldiff m n)']"
90,89,29,89_implies_xistransitive_sat_istransitivesunion,"['implies', 'xistransitive', 'sat', 'istransitivesunion', 'transitive', 'reflgen', 'lt', 'isfixedpt', 'istrichotomous', 'preform']","['lemma sat_of_implies_of_sat {p q : preform} :\n  implies p q → sat p → sat q', ""lemma monotonicity.imp {p p' q q' : Prop} (h₁ : implies p' q') (h₂ : implies q p) :\n  implies (p → p') (q → q')"", ""lemma monotonicity.and {p p' q q' : Prop} (hp : implies p p') (hq : implies q q') :\n  implies (p ∧ q) (p' ∧ q')""]"
91,90,29,90_enumfrom_enum_xs_znum,"['enumfrom', 'enum', 'xs', 'znum', 'num', 'ntoznumneg', 'nth', 'ntoznum', 'enumfromcons', 'enumcons']","['lemma enum_append (xs ys : list α) :\n  enum (xs ++ ys) = enum xs ++ enum_from xs.length ys', ""lemma enum_cons' (x : α) (xs : list α) :\n  enum (x :: xs) = (0, x) :: (enum xs).map (prod.map nat.succ id)"", 'lemma enum_cons (x : α) (xs : list α) :\n  enum (x :: xs) = (0, x) :: enum_from 1 xs']"
92,91,28,91_ofdual_todual_withtoptodual_withbotofdual,"['ofdual', 'todual', 'withtoptodual', 'withbotofdual', 'grade', 'withbottodual', 'todualapplycoe', 'lttodualiff', 'orderdual', 'withbot']","['lemma monovary.dual_right : monovary f g → antivary f (to_dual ∘ g)', 'lemma grade_to_dual [grade_order 𝕆 α] (a : α) :\n  grade 𝕆ᵒᵈ (to_dual a) = to_dual (grade 𝕆 a)', 'lemma grade_of_dual [grade_order 𝕆 α] (a : αᵒᵈ) :\n  grade 𝕆 (of_dual a) = of_dual (grade 𝕆ᵒᵈ a)']"
93,92,28,92_semiconjby_conjaut_econj_isconj,"['semiconjby', 'conjaut', 'econj', 'isconj', 'aut', 'conj', 'sdisjsum', 'isconjiff', 'invsymmleftiff', 'invsymmleft']","['lemma conj_Aut_zpow (f : Aut X) (n : ℤ) : α.conj_Aut (f^n) = (α.conj_Aut f)^n', 'lemma trans_conj_Aut {Z : C} (β : Y ≅ Z) (f : Aut X) :\n  (α ≪≫ β).conj_Aut f = β.conj_Aut (α.conj_Aut f)', 'lemma map_conj {X Y : C} (α : X ≅ Y) (f : End X) :\n  F.map (α.conj f) = (F.map_iso α).conj (F.map f)']"
94,93,28,93_ofdual_todual_withbotofdual_withbot,"['ofdual', 'todual', 'withbotofdual', 'withbot', 'withtopofdual', 'withbottodual', 'hasle', 'withtop', 'hmul', 'coeofmclosureeqtopright']","['lemma sum_dual_distrib_symm_inr  :\n  (sum_dual_distrib α β).symm (inr (to_dual b)) = to_dual (inr b)', 'lemma coe_of_mclosure_eq_top_right (f : M → N) (hs : closure s = ⊤)\n  (h1 hmul) : ⇑(of_mclosure_eq_top_right f hs h1 hmul) = f', 'theorem ite_eq_ff_distrib (c : Prop) [decidable c] (a b : bool) : ((if c then a else b) = ff) = (if c then a = ff else b = ff)']"
95,94,28,94_disjoint_spairwisedisjoint_disjointofsubsetright_tinjon,"['disjoint', 'spairwisedisjoint', 'disjointofsubsetright', 'tinjon', 'tpairwisedisjoint', 'm2', 'iscompl', 'disjointofleright', 'disjointinsertright', 'm1tofinset']","['lemma disjoint_of_subset_right (h : t ⊆ u) (d : disjoint s u) : disjoint s t', 'lemma disjoint_compl_compl_right_iff : disjoint a bᶜᶜ ↔ disjoint a b', 'lemma disjoint_of_subset_left (h : s ⊆ u) (d : disjoint u t) : disjoint s t']"
96,95,28,95_addleoflenegadd_subltsubleft_addltaddofltofle_addltofltnegadd,"['addleoflenegadd', 'subltsubleft', 'addltaddofltofle', 'addltofltnegadd', 'addltofltsubleft', 'addltaddofleoflt', 'addleoflesubleft', 'intmodneg', 'leaddofsubleftle', 'leaddofsubrightle']","['lemma le_add_of_sub_left_le {a b c : ℤ} (h : a - b ≤ c) : a ≤ b + c', 'lemma neg_le_sub_right_of_le_add {a b c : ℤ} (h : c ≤ a + b) : -b ≤ a - c', 'lemma sub_le_sub {a b c d : ℤ} (hab : a ≤ b) (hcd : c ≤ d) : a - d ≤ b - c']"
97,96,28,96_ssigma_sigmamk_nodupkeys_sigma,"['ssigma', 'sigmamk', 'nodupkeys', 'sigma', 'sigmahommk', 'sigmamap', 'multisetsigma', 'memsigma', 'lsigma', 'sigmafstnodup']","[""theorem nodupkeys_iff_pairwise {l} : nodupkeys l ↔\n  pairwise (λ s s' : sigma β, s.1 ≠ s'.1) l"", 'theorem nodupkeys_singleton (s : sigma β) : nodupkeys [s]', 'theorem nodupkeys_of_nodupkeys_cons {s : sigma β} {l : list (sigma β)} (h : nodupkeys (s :: l)) :\n  nodupkeys l']"
98,97,28,97_drop_ldrop_dropfun_typevec,"['drop', 'ldrop', 'dropfun', 'typevec', 'append1', '1prod', 'listdrop', 'stream', 'wseq', 'llength']","['lemma drop_append_eq_append_drop {l₁ l₂ : list α} {n : ℕ} :\n  drop n (l₁ ++ l₂) = drop n l₁ ++ drop (n - l₁.length) l₂', 'theorem dropn_add (s : wseq α) (m) : ∀ n, drop s (m + n) = drop (drop s m) n', 'theorem drop_add : ∀ m n (l : list α), drop (m + n) l = drop m (drop n l)']"
99,98,28,98_swap_prodswap_yswap_xswap,"['swap', 'prodswap', 'yswap', 'xswap', 'equivswap', 'ispartialorder', 'swapswapeq', 'liftrelo', 'islinearorder', 's2']","['theorem is_total.swap (r) [is_total α r] : is_total α (swap r)', 'theorem is_partial_order.swap (r) [is_partial_order α r] : is_partial_order α (swap r)', 'theorem swap_comm (a b : α) : swap a b = swap b a']"
100,99,27,99_swap_equivswap_swapcore_covariantclass,"['swap', 'equivswap', 'swapcore', 'covariantclass', 'contravariantclass', 'decidableeq', 'perm', 'functioninjectiveswapapply', 'swapbijective', 'rightmulleone']","[""lemma mul_right_cancel'' [contravariant_class α α (swap (*)) (≤)]\n  {a b c : α} (h : a * b = c * b) :\n  a = c"", 'lemma le_one_of_mul_le_left [contravariant_class α α (swap (*)) (≤)] {a b : α} (h : a * b ≤ b) :\n  a ≤ 1', 'lemma get_left_swap (x : α ⊕ β) : x.swap.get_left = x.get_right']"
101,100,27,100_oneapply_onemul_numzero_onedef,"['oneapply', 'onemul', 'numzero', 'onedef', 'coeone', 'cauchy', 'zerosmulg', 'powzero', 'iteratezeroapply', 'cauchyzero']","['lemma one : is_idempotent_elem (1 : M₁)', 'lemma cauchy_zero : (0 : ℝ).cauchy = 0', 'lemma one_def : 1 = (mk 1 : Cauchy abv)']"
102,101,27,101_size_bounded_sized_issearchable,"['size', 'bounded', 'sized', 'issearchable', 'balance', 'balanced', 'lo', 'balance1node', 'lt', 'find']","[""theorem all_balance_l {P l x r}\n  (hl : balanced l) (hr : balanced r)\n  (sl : sized l) (sr : sized r)\n  (H : (∃ l', raised l' (size l) ∧ balanced_sz l' (size r)) ∨\n       (∃ r', raised (size r) r' ∧ balanced_sz (size l) r')) :\n  all P (@balance_l α l x r) ↔ all P l ∧ P x ∧ all P r"", 'theorem balance_l_eq_balance {l x r}\n  (sl : sized l) (sr : sized r)\n  (H1 : size l = 0 → size r ≤ 1)\n  (H2 : 1 ≤ size l → 1 ≤ size r → size r ≤ delta * size l) :\n  @balance_l α l x r = balance l x r', ""theorem size_balance_l {l x r}\n  (hl : balanced l) (hr : balanced r)\n  (sl : sized l) (sr : sized r)\n  (H : (∃ l', raised l' (size l) ∧ balanced_sz l' (size r)) ∨\n       (∃ r', raised (size r) r' ∧ balanced_sz (size l) r')) :\n  size (@balance_l α l x r) = size l + size r + 1""]"
103,102,26,102_gcd_mgcd_cop_bgcd,"['gcd', 'mgcd', 'cop', 'bgcd', 'bn', 'gcdmonoid', 'mcoprime', 'gcdb', 'am', 'gcdgcdselfleftleft']","['theorem gcd_dvd_gcd_mul_left_right [gcd_monoid α] (m n k : α) : gcd m n ∣ gcd m (k * n)', 'theorem gcd_dvd_gcd_of_dvd_right {m k : ℕ} (n : ℕ) (H : m ∣ k) : gcd n m ∣ gcd n k', 'theorem gcd_dvd_gcd_of_dvd_left {m k : ℕ} (n : ℕ) (H : m ∣ k) : gcd m n ∣ gcd k n']"
104,103,26,103_some_intfractpairstream_intfractpair_ifpn,"['some', 'intfractpairstream', 'intfractpair', 'ifpn', 'ifpsuccn', 'ifpnfr', 'gpn', 'dite', 'option', 'gpnb']","['lemma some_mod_some [has_mod α] (a b : α) : some a % some b = some (a % b)', 'lemma map₂_some_some (f : α → β → γ) (a : α) (b : β) :\n  map₂ f (some a) (some b) = some (f a b)', 'theorem seq_some {α β} {a : α} {f : α → β} : some f <*> some a = some (f a)']"
105,104,26,104_count_scanl_vval_countcons,"['count', 'scanl', 'vval', 'countcons', 'countconsself', 'multiset', 'then', 'else', 'if', 'nil']","['lemma duplicate_iff_two_le_count [decidable_eq α] : (x ∈+ l) ↔ 2 ≤ count x l', 'theorem count_le_of_le (a : α) {s t} : s ≤ t → count a s ≤ count a t', 'theorem count_sub (a : α) (s t : multiset α) : count a (s - t) = count a s - count a t']"
106,105,26,105_forallcongr_forallforallmerge_forall_prop,"['forallcongr', 'forallforallmerge', 'forall', 'prop', 'chain', 'forallmemtarget', 'forallapplyeqimpiff', 'forallforallconst', 'forallfinsuccpi', 'forallexistsindex']","[""theorem «forall» {p : (Σ' a, β a) → Prop} :\n  (∀ x, p x) ↔ (∀ a b, p ⟨a, b⟩)"", 'theorem «forall» {q : p → Prop} :\n  (∀ x, q x) ↔ (∀ x ∈ p, q ⟨x, ‹_›⟩)', ""theorem forall' {p : α → β → Prop} : (∀ x : α × β, p x.1 x.2) ↔ ∀ a b, p a b""]"
107,106,26,106_isunit_isunitiffexistsinv_isupperset_commmonoid,"['isunit', 'isunitiffexistsinv', 'isupperset', 'commmonoid', 'mulaction', 'monoid', 'smulcommclass', 'isscalartower', 'isunitiffsingleton', 'coetounits']","['theorem is_unit_of_mul_is_unit_left [comm_monoid M] {x y : M}\n  (hu : is_unit (x * y)) : is_unit x', 'lemma is_unit_unop {M} [monoid M] {m : Mᵐᵒᵖ} : is_unit (unop m) ↔ is_unit m', 'theorem of_irreducible_pow {α} [monoid α] {x : α} {n : ℕ} (hn : n ≠ 1) :\n  irreducible (x ^ n) → is_unit x']"
108,107,25,107_classicalimpliesiffnotor_notforalleq_notboundediff_decidablenotimpnot,"['classicalimpliesiffnotor', 'notforalleq', 'notboundediff', 'decidablenotimpnot', 'impfalse', 'notanddistribeq', 'iffnotcomm', 'falseiff', 'eqnoneiff', 'decidableimpiffnotor']","['theorem imp_false : (a → false) ↔ ¬ a', 'lemma false_iff (a : Prop) : (false ↔ a) ↔ ¬ a', ""theorem xor_iff_not_iff' : xor a b ↔ (¬a ↔ b)""]"
109,108,25,108_pred_ppred_fnextfixed_natpred,"['pred', 'ppred', 'fnextfixed', 'natpred', 'predorderpred', 'fixedpoints', 'nextfixedle', 'psetliftu', 'preveq', 'primepredpos']","['lemma pred_strict_mono : strict_mono (pred : α → α)', 'lemma pred_iterate (a : ℕ) : ∀ n, pred^[n] a = a - n', 'lemma pred_one_add (n : ℕ) : pred (1 + n) = n']"
110,109,25,109_ismulhom_muloneclass_group_of,"['ismulhom', 'muloneclass', 'group', 'of', 'lift', 'freemonoid', 'isgrouphom', 'isaddmonoidhom', 'liftcompof', 'ih']","['lemma lift_restrict (f : free_monoid α →* M) : lift (f ∘ of) = f', ""lemma lift_comp_of' (f : free_semigroup α →ₙ* β) : lift (f ∘ of) = f"", 'lemma lift_comp_of (f : α → M) : lift f ∘ of = f']"
111,110,24,110_strictmono_mono_issplitmono_strongmono,"['strictmono', 'mono', 'issplitmono', 'strongmono', 'preorder', 'strictmonoidle', 'strictmonoltifflt', 'strictmonoiffltsucc', 'issplitmonoiff', 'toprod']","['lemma mono_of_mono {X Y Z : C} (f : X ⟶ Y) (g : Y ⟶ Z) [mono (f ≫ g)] : mono f', 'lemma is_split_mono_of_mono [split_mono_category C] {X Y : C} (f : X ⟶ Y) [mono f] :\n  is_split_mono f', 'lemma is_iso_of_mono_of_is_split_epi {X Y : C} (f : X ⟶ Y) [mono f] [is_split_epi f] : is_iso f']"
112,111,24,111_posmulmono_covariantclass_mullecancellable_zeroleoneclass,"['posmulmono', 'covariantclass', 'mullecancellable', 'zeroleoneclass', 'a0', 'ha', 'hle', 'itenonnegofposofnonneg', 'leoflemulofleoneofnonnegleft', 'leftonelemulofleofle']","[""lemma mul_le_mul_of_nonpos_of_nonneg' (hca : c ≤ a) (hbd : b ≤ d) (ha : 0 ≤ a) (hd : d ≤ 0) :\n  a * b ≤ c * d"", 'lemma eq_one_of_mul_le_one_right (ha : 1 ≤ a) (hb : 1 ≤ b) (hab : a * b ≤ 1) : b = 1', 'lemma eq_one_of_one_le_mul_left (ha : a ≤ 1) (hb : b ≤ 1) (hab : 1 ≤ a * b) : a = 1']"
113,112,24,112_replicate_replicatesucc_memreplicate_filtereq,"['replicate', 'replicatesucc', 'memreplicate', 'filtereq', 'count', 'nthreplicate', 'eqreplicatecard', 'eqreplicate', 'coereplicate', 'eqreplicateiff']","['theorem replicate_sublist_replicate (a : α) {m n} :\n  replicate m a <+ replicate n a ↔ m ≤ n', 'theorem replicate_add (m n) (a : α) : replicate (m + n) a = replicate m a ++ replicate n a', 'theorem replicate_succ (a : α) (n) : replicate (n + 1) a = a :: replicate n a']"
114,113,24,113_uy_ux_divpassoc_ndenom,"['uy', 'ux', 'divpassoc', 'ndenom', 'mdenom', 'divisionring', 'divpinv', 'divpeqdivpiff', 'divpdivpeqdivpmul', 'divpadddivpsame']","['theorem cast_sub_of_ne_zero {m n : ℚ}\n  (m0 : (m.denom : α) ≠ 0) (n0 : (n.denom : α) ≠ 0) : ((m - n : ℚ) : α) = m - n', 'theorem cast_div_of_ne_zero {m n : ℚ} (md : (m.denom : α) ≠ 0)\n  (nn : (n.num : α) ≠ 0) (nd : (n.denom : α) ≠ 0) : ((m / n : ℚ) : α) = m / n', 'lemma divp_eq_divp_iff {x y : α} {ux uy : αˣ} :\n  x /ₚ ux = y /ₚ uy ↔ x * uy = y * ux']"
115,114,24,114_btw_andandandcomm_iffiffeq_succreciff,"['btw', 'andandandcomm', 'iffiffeq', 'succreciff', 'sbtwiffbtwnotbtw', 'relor', 'reliff', 'oranddistribright', 'oranddistribleft', 'impcongrctx']","['theorem and_iff_left_iff_imp {a b : Prop} : ((a ∧ b) ↔ a) ↔ (a → b)', 'lemma succ.rec_iff {p : α → Prop} (hsucc : ∀ a, p a ↔ p (succ a)) {a b : α} (h : a ≤ b) :\n  p a ↔ p b', 'lemma sbtw_iff_btw_not_btw {a b c : α} : sbtw a b c ↔ btw a b c ∧ ¬btw c b a']"
116,115,24,115_generalizedheytingalgebra_hashimp_b2_lehimpiffleft,"['generalizedheytingalgebra', 'hashimp', 'b2', 'lehimpiffleft', 'infleinfright', 'infhimple', 'himplehimpleft', 'himplehimphimphimp', 'himpinfdistrib', 'himpeq']","['lemma inf_le_inf_right (a : α) {b c : α} (h : b ≤ c) : b ⊓ a ≤ c ⊓ a', 'lemma bihimp_eq_left : a ⇔ b = a ↔ b = ⊤', 'lemma bihimp_snd [generalized_heyting_algebra α] [generalized_heyting_algebra β]\n  (a b : α × β) :\n  (a ⇔ b).2 = a.2 ⇔ b.2']"
117,116,23,116_ioo_setioo_cioo_fupdate,"['ioo', 'setioo', 'cioo', 'fupdate', 'addmemiooiffleft', 'imagecoeioo', 'imageioo', 'dualioo', 'iccsubsetioo', 'addmemiooiffright']","['lemma Ioo_add_bij : bij_on (+d) (Ioo a b) (Ioo (a + d) (b + d))', ""lemma dual_Ioo : Ioo (to_dual a) (to_dual b) = of_dual ⁻¹' Ioo b a"", 'lemma preimage_neg_Ioo : - Ioo a b = Ioo (-b) (-a)']"
118,117,23,117_max_maximum_coemax_tmax,"['max', 'maximum', 'coemax', 'tmax', 'argmax', 'rbnode', 'maxbotright', 'maxeq', 'maxchoice', 'maxcases']","['lemma max_bot_right [order_bot α] (a : α) : max a ⊥ = a', 'theorem max_choice (a b : α) : max a b = a ∨ max a b = b', 'theorem cast_max : (↑(max a b) : α) = max a b']"
119,118,23,118_succ_unpair_choose_castsucc,"['succ', 'unpair', 'choose', 'castsucc', 'natsucc', 'unpairaddle', 'succnezero', 'ordersucc', 'succdef', 'lesucc']","['lemma succ_ne_zero (n : ℕ) : succ n ≠ 0', ""theorem succ_inj' {n m : ℕ} : succ n = succ m ↔ n = m"", 'lemma succ_eq_one_add (n : ℕ) : n.succ = 1 + n']"
120,119,23,119_zipwith_la_lb_lnth,"['zipwith', 'la', 'lb', 'lnth', 'lmapwithindex', 'llength', 'ltail', 'zipwith3', 'mapwithindex', 'ynth']","['lemma zip_with3_same_right (f : α → β → β → γ) : ∀ (la : list α) (lb : list β),\n  zip_with3 f la lb lb = zip_with (λ a b, f a b b) la lb', 'lemma zip_with3_same_left (f : α → α → β → γ) : ∀ (la : list α) (lb : list β),\n  zip_with3 f la la lb = zip_with (λ a b, f a a b) la lb', ""lemma zip_with_append (f : α → β → γ) (l la : list α) (l' lb : list β) (h : l.length = l'.length) :\n  zip_with f (l ++ la) (l' ++ lb) = zip_with f l l' ++ zip_with f la lb""]"
121,120,23,120_last_snoc_castsucc_consnenil,"['last', 'snoc', 'castsucc', 'consnenil', 'fin', 'castpred', 'finlast', 'castle', 'castlt', 'normalizefinlt']","['lemma cast_succ_cast_pred {i : fin (n + 2)} (h : i < last _) : cast_succ i.cast_pred = i', 'lemma pred_above_last : pred_above (fin.last n) = cast_pred', 'lemma snoc_last : snoc p x (last n) = x']"
122,121,22,121_e2_t2_e1_commring,"['e2', 't2', 'e1', 'commring', 'mulleftinj', 't1', 'nozerodivisors', 'n2', 'functionconstnezero', 'mulnezerocomm']","['lemma zero_mul_eq {α} {R : α → α → Prop} [semiring α] {a b : α} (h : a = 0) (_ : R b 0) :\n  a * b = 0', 'theorem mul_assoc_rev {α} [semigroup α] (a b c : α) : a * (b * c) = a * b * c', 'lemma mul_subst {α} [comm_ring α] {n1 n2 k e1 e2 t1 t2 : α} (h1 : n1 * e1 = t1) (h2 : n2 * e2 = t2)\n     (h3 : n1*n2 = k) : k * (e1 * e2) = t1 * t2']"
123,122,22,122_partialorder_ltifflenotle_ltiff_notlteq,"['partialorder', 'ltifflenotle', 'ltiff', 'notlteq', 'notlt', 'notleoflt', 'notgtiffeq', 'notcovbyiff', 'neleifflt', 'ltiffnotge']","['lemma mk_lt_mk : (a₁, b₁) < (a₂, b₂) ↔ a₁ < a₂ ∧ b₁ ≤ b₂ ∨ a₁ ≤ a₂ ∧ b₁ < b₂', 'lemma not_le_of_lt [preorder α] {a b : α} (h : a < b) : ¬ b ≤ a', 'lemma lt_iff (hf : right_ord_continuous f) (h : injective f) {x y} :\n  f x < f y ↔ x < y']"
124,123,22,123_preimagemulrightone_ordconnectedsingleton_anysingleton_pairwisepairofsymmetric,"['preimagemulrightone', 'ordconnectedsingleton', 'anysingleton', 'pairwisepairofsymmetric', 'preimagefloorzero', 'preimagemulleftone', 'nonemptysubsetsingletoniff', 'setofeqeqsingleton', 'setpairwise', 'singletonsubsetsetiff']","['theorem any_singleton {P : α → Prop} {x : α} : any P (singleton x) ↔ P x', ""lemma preimage_floor_zero : (floor : α → ℕ) ⁻¹' {0} = Iio 1"", ""lemma eval_preimage' [decidable_eq ι] {s : set (α i)} :\n  eval i ⁻¹' s = pi {i} (update (λ i, univ) i s)""]"
125,124,22,124_sublistsaux_powersetaux_gcontinuantsaux_xgcdaux,"['sublistsaux', 'powersetaux', 'gcontinuantsaux', 'xgcdaux', 'sqrtaux', 'sigmafst', 'gterminatedat', 'terminatedatn', 'cons', 'list']","['theorem sublists_aux_eq_foldr (l : list α) : ∀ (f : list α → list β → list β),\n  sublists_aux l f = foldr f [] (sublists_aux l cons)', 'theorem sublists_aux_cons_eq_sublists_aux₁ (l : list α) :\n  sublists_aux l cons = sublists_aux₁ l (λ x, [x])', 'theorem sublists_aux_cons_append (l₁ l₂ : list α) :\n  sublists_aux (l₁ ++ l₂) cons = sublists_aux l₁ cons ++\n    (do x ← sublists_aux l₂ cons, (++ x) <$> sublists l₁)']"
126,125,22,125_zpowmul_invzpow_coezpow_groupwithzero,"['zpowmul', 'invzpow', 'coezpow', 'groupwithzero', 'zpowposofpos', 'mapzpow', 'pairwisedisjointioomulzpow', 'zerozpow', 'onezpow', 'oneltzpow']","['lemma pairwise_disjoint_Ioo_mul_zpow :\n  pairwise (disjoint on λ n : ℤ, Ioo (a * b ^ n) (a * b ^ (n + 1)))', 'lemma zpow_bit0_abs (a : α) (p : ℤ) : |a| ^ bit0 p = a ^ bit0 p', 'lemma zpow_bit0_pos (h : a ≠ 0) (n : ℤ) : 0 < a ^ bit0 n']"
127,126,22,126_revzip_zip_unzip_natsize,"['revzip', 'zip', 'unzip', 'natsize', 'powersetaux', 'size', 'revzipsublists', 'lsublists', 'lmap', 'l2']","[""theorem revzip_powerset_aux_perm_aux' {l : list α} :\n  revzip (powerset_aux l) ~ revzip (powerset_aux' l)"", 'theorem unzip_zip_right {l₁ : list α} {l₂ : list β} (h : length l₂ ≤ length l₁) :\n  (unzip (zip l₁ l₂)).2 = l₂', 'theorem unzip_revzip (l : list α) : (revzip l).unzip = (l, l.reverse)']"
128,127,22,127_factormultiset_dvdiff_natprimes_pprime,"['factormultiset', 'dvdiff', 'natprimes', 'pprime', 'addoneleiff', 'factormultisetleiff', 'coepnatnat', 'coepnatprime', 'countfactormultiset', 'existsprimeanddvd']","['theorem pos (n : ℕ+) : 0 < (n : ℕ)', 'lemma exists_prime_and_dvd {n : ℕ+} (hn : n ≠ 1) : (∃ (p : ℕ+), p.prime ∧ p ∣ n)', 'lemma mk_le_mk (n k : ℕ) (hn : 0 < n) (hk : 0 < k) :\n  (⟨n, hn⟩ : ℕ+) ≤ ⟨k, hk⟩ ↔ n ≤ k']"
129,128,22,128_issmulregular_isregular_qrmatch_reflectsepimorphisms,"['issmulregular', 'isregular', 'qrmatch', 'reflectsepimorphisms', 'regularexpression', 'srestrict', 'prmatch', 'replace', 'frestrict', 'reflectsmonomorphisms']","['lemma plus_def (P Q : regular_expression α) : plus P Q = P + Q', 'lemma mul [has_mul R] [is_scalar_tower R R M]\n  (ra : is_smul_regular M a) (rb : is_smul_regular M b) : is_smul_regular M (a * b)', ""theorem mem_replace {a a' : α} {b : β a} {s : alist β} :\n  a' ∈ replace a b s ↔ a' ∈ s""]"
130,129,22,129_filtermap_filter_option_lfilter,"['filtermap', 'filter', 'option', 'lfilter', 'filtermapconsnone', 'decidablepred', 'pwfilter', 'join', 'filtermapappend', 'filtermapconssome']","['theorem map_filter (f : β → α) (l : list β) :\n  filter p (map f l) = map f (filter (p ∘ f) l)', 'theorem filter_filter_map (f : α → option β) (p : β → Prop) [decidable_pred p] (l : list α) :\n  filter p (filter_map f l) = filter_map (λ x, (f x).filter p) l', 'theorem map_filter_map_some_eq_filter_map_is_some (f : α → option β) (l : list α) :\n  (l.filter_map f).map some = (l.map f).filter (λ b, b.is_some)']"
131,130,22,130_rcore_insertinterdistrib_tite_ssigma,"['rcore', 'insertinterdistrib', 'tite', 'ssigma', 'insert', 'etarget', 'binterinter', 'unioninterofmonotone', 'intercongrright', 'intereqleftiffsubset']","['theorem singleton_inter_of_not_mem {a : α} {s : finset α} (H : a ∉ s) : {a} ∩ s = ∅', 'lemma insert_inter_distrib (a : α) (s t : set α) : insert a (s ∩ t) = insert a s ∩ insert a t', 'lemma insert_inter_distrib (s t : finset α) (a : α) : insert a (s ∩ t) = insert a s ∩ insert a t']"
132,131,21,131_const_typevecconst_ktoznum_eiscs,"['const', 'typevecconst', 'ktoznum', 'eiscs', 'constinj', 'constmul', 'constlimzero', 'addconst', 'cseval', 'constinv']","['theorem const_lt {x y : α} : const x < const y ↔ x < y', 'theorem const_mul (x y : β) : const (x * y) = const x * const y', 'theorem const_equiv {x y : β} : const x ≈ const y ↔ x = y']"
133,132,21,132_spi_pi_univ_smulpi,"['spi', 'pi', 'univ', 'smulpi', 'pieval', 'mulaction', 'piequivpisubtypeprod', 'pimono', 'pieqemptyiff', 'picongr']","[""lemma pairwise_disjoint_pi {ι' α : ι → Type*} {s : Π i, set (ι' i)} {f : Π i, ι' i → set (α i)}\n  (hs : ∀ i, (s i).pairwise_disjoint (f i)) :\n  ((univ : set ι).pi s).pairwise_disjoint (λ I, (univ : set ι).pi (λ i, f _ (I i)))"", 'lemma Union_univ_pi (t : Π i, ι → set (π i)) :\n  (⋃ (x : α → ι), pi univ (λ i, t i (x i))) = pi univ (λ i, ⋃ (j : ι), t i j)', 'lemma empty_pi (s : Π i, set (α i)) : pi ∅ s = univ']"
134,133,21,133_withbot_addmonoidwithone_addbot_coenebot,"['withbot', 'addmonoidwithone', 'addbot', 'coenebot', 'withbotrangeeq', 'nebotoflenebot', 'noneeqbot', 'addeqcoe', 'oneleiffzerolt', 'predcoebot']","['lemma succ_coe (a : α) : succ (↑a : with_bot α) = ↑(succ a)', 'lemma mul_def {a b : with_bot α} :\n  a * b = if a = 0 ∨ b = 0 then 0 else option.map₂ (*) a b', 'lemma with_bot.range_eq {α β} (f : with_bot α → β) :\n  range f = insert (f ⊥) (range (f ∘ coe : α → β))']"
135,134,21,134_bddabove_bddbelow_image2_lowerbounds,"['bddabove', 'bddbelow', 'image2', 'lowerbounds', 'upperbounds', 'galoisconnection', 'finlast', 'bddbelowsmulofnonpos', 'bddabovebddbelowimage2ofbddabove', 'bddbelowinterofleft']","['lemma image2_upper_bounds_upper_bounds_subset_upper_bounds_image2 :\n  image2 f (lower_bounds s) (lower_bounds t) ⊆ upper_bounds (image2 f s t)', 'lemma bdd_above.bdd_below_image2_of_bdd_above :\n  bdd_above s → bdd_below t → bdd_below (image2 f s t)', 'lemma bdd_above.image2_bdd_below : bdd_above s → bdd_above t → bdd_below (image2 f s t)']"
136,135,21,135_bit1_bit0_semiring_linearorderedsemiring,"['bit1', 'bit0', 'semiring', 'linearorderedsemiring', 'natabs', 'int', 'addbit0bit0', 'zpowbit0posiff', 'coebit1', 'adconebit0']","['theorem sle_bit1_bit1 {α} [linear_ordered_semiring α] (a b : α) (h : a + 1 ≤ b) :\n  bit1 a + 1 ≤ bit1 b', 'theorem adc_bit1_bit1 {α} [semiring α] (a b c : α) (h : a + b + 1 = c) :\n  bit1 a + bit1 b + 1 = bit1 c', 'theorem sle_bit0_bit1 {α} [linear_ordered_semiring α] (a b : α) (h : a ≤ b) : bit0 a + 1 ≤ bit1 b']"
137,136,21,136_spiecewise_piecewisememicc_decidable_piecewiseeqofmem,"['spiecewise', 'piecewisememicc', 'decidable', 'piecewiseeqofmem', 'piecewiseinsertself', 'insert', 'seticc', 'const', 'pi', 'piecewise']","['lemma le_piecewise {δ : α → Type*} [Π i, preorder (δ i)] {s : set α} [Π j, decidable (j ∈ s)]\n  {f₁ f₂ g : Π i, δ i} (h₁ : ∀ i ∈ s, g i ≤ f₁ i) (h₂ : ∀ i ∉ s, g i ≤ f₂ i) :\n  g ≤ s.piecewise f₁ f₂', 'lemma piecewise_insert_self [decidable_eq α] {j : α} [∀ i, decidable (i ∈ insert j s)] :\n  (insert j s).piecewise f g j = f j', 'lemma piecewise_insert_self {j : α} [∀i, decidable (i ∈ insert j s)] :\n  (insert j s).piecewise f g j = f j']"
138,137,21,137_coeeqzero_1n_inverseone_codomaintrivialiffrangetrivial,"['coeeqzero', '1n', 'inverseone', 'codomaintrivialiffrangetrivial', 'associatedeqzeroiff', 'extringiff', 'codomaintrivialiffmaponeeqzero', 'rightnezeroofmuleqone', 'factorshelperend', 'eqoneiffeqoneofmuleqone']","['lemma coe_eq_zero {x : Icc (0:α) 1} : (x : α) = 0 ↔ x = 0', 'lemma mk_one [nontrivial α] (h : (1 : α) ∈ Ioc (0 : α) 1) : (⟨1, h⟩ : Ioc (0:α) 1) = 1', 'lemma coe_eq_zero [nontrivial α] {x : Ico (0:α) 1} : (x : α) = 0 ↔ x = 0']"
139,138,21,138_dual_size_ordnode_valid,"['dual', 'size', 'ordnode', 'valid', 'all', 'balancedsz', 'node3l', 'glue', 'node3r', 'node4l']","['theorem dual_node4_r (l : ordnode α) (x : α) (m : ordnode α) (y : α) (r : ordnode α) :\n  dual (node4_r l x m y r) = node4_l (dual r) y (dual m) x (dual l)', 'theorem dual_node3_l (l : ordnode α) (x : α) (m : ordnode α) (y : α) (r : ordnode α) :\n  dual (node3_l l x m y r) = node3_r (dual r) y (dual m) x (dual l)', ""theorem valid'.dual : ∀ {t : ordnode α} {o₁ o₂} (h : valid' o₁ t o₂), @valid' αᵒᵈ _ o₂ (dual t) o₁""]"
140,139,20,139_ltake_take_iprod_lengthtake,"['ltake', 'take', 'iprod', 'lengthtake', 'nthle', 'llength', 'ldrop', 'ftake', 'takeeqtake', 'i1drop']","['lemma map_take {α β : Type*} (f : α → β) :\n  ∀ (L : list α) (i : ℕ), (L.take i).map f = (L.map f).take i', 'theorem take_cons (n) (a : α) (l : list α) : take (succ n) (a::l) = a :: take n l', 'lemma take_sublist (n) (l : list α) : take n l <+ l']"
141,140,20,140_update_lupdatenth_fupdate_adjunitapp,"['update', 'lupdatenth', 'fupdate', 'adjunitapp', 'xmap', 'inl', 'decidableeq', 'icc', 'fapp', 'snoc']","['lemma update_lt_update_iff : update x i a < update x i b ↔ a < b', 'lemma lt_to_lex_update_self_iff : to_lex x < to_lex (update x i a) ↔ x i < a', 'lemma update_one [Π i, has_one (f i)] [decidable_eq I] (i : I) :\n  update (1 : Π i, f i) i 1 = 1']"
142,141,20,141_hv_hu_picons_symcast,"['hv', 'hu', 'picons', 'symcast', 'ecast', 'gmap', 'fincast', 'atolist', 'eqrecon', 'array']","[""lemma hom.cast_heq {u v u' v' : U} (hu : u = u') (hv : v = v') (e : u ⟶ v) :\n  e.cast hu hv == e"", ""lemma hom.eq_cast_iff_heq {u v u' v' : U} (hu : u = u') (hv : v = v')\n  (e : u ⟶ v) (e' : u' ⟶ v') : e' = e.cast hu hv ↔ e' == e"", ""lemma hom.cast_eq_cast {u v u' v' : U} (hu : u = u') (hv : v = v') (e : u ⟶ v) :\n  e.cast hu hv = cast (by rw [hu, hv]) e""]"
143,142,20,142_mod_zmod_modeqone_moddivaux,"['mod', 'zmod', 'modeqone', 'moddivaux', 'addrightcancel', 'leofltadd', 'modeqsub', 'modeqneg', 'modeqandmodeqiffmodeqmul', 'moddivauxspec']","['theorem mul_right (c : ℕ) (h : a ≡ b [MOD n]) : a * c ≡ b * c [MOD n]', ""theorem add_right_cancel' (c : ℕ) (h : a + c ≡ b + c [MOD n]) : a ≡ b [MOD n]"", 'theorem mul_left (c : ℕ) (h : a ≡ b [MOD n]) : c * a ≡ c * b [MOD n]']"
144,143,20,143_eisimage_maximals_etarget_intersymmdiffdistribright,"['eisimage', 'maximals', 'etarget', 'intersymmdiffdistribright', 'unioninterofantitone', 'intersubsetite', 'intersmulunionsubsetunion', 'intersetofeqsep', 'intermaximalssubset', 'interinterintercomm']","[""lemma inj_on.image_inter {s t u : set α} (hf : u.inj_on f) (hs : s ⊆ u) (ht : t ⊆ u) :\n  f '' (s ∩ t) = f '' s ∩ f '' t"", 'lemma Union_inter_of_antitone {ι α} [preorder ι] [is_directed ι (swap (≤))] {s t : ι → set α}\n  (hs : antitone s) (ht : antitone t) : (⋃ i, s i ∩ t i) = (⋃ i, s i) ∩ (⋃ i, t i)', 'lemma inter_maximals_subset : s ∩ maximals r t ⊆ maximals r (s ∩ t)']"
145,144,20,144_natabs_anatabs_bnatabs_znatabs,"['natabs', 'anatabs', 'bnatabs', 'znatabs', 'int', 'natabszero', 'natabsdiv', 'coenatdvdleft', 'coenatdvdright', 'intnatabspos']","['lemma nat_abs_le_of_dvd_ne_zero {s t : ℤ} (hst : s ∣ t) (ht : t ≠ 0) : nat_abs s ≤ nat_abs t', 'lemma nat_abs_add_nonneg :\n  ∀ {a b : int}, 0 ≤ a → 0 ≤ b → nat_abs (a + b) = nat_abs a + nat_abs b', 'lemma nat_abs_zero : nat_abs (0 : int) = (0 : nat)']"
146,145,20,145_leabs_abssubleiff_absle_lemabs,"['leabs', 'abssubleiff', 'absle', 'lemabs', 'invleabs', 'borle', 'borassoc', 'abszero', 'rightlebor', 'absofpos']","['lemma right_le_bor : ∀ x y : bool, y ≤ x || y', 'lemma abs_eq_max_neg : abs a = max a (-a)', 'lemma round_le (x : α) (z : ℤ) : |x - round x| ≤ |x - z|']"
147,146,20,146_memsunion_exists_mempreimage_setu,"['memsunion', 'exists', 'mempreimage', 'setu', 'memimage2', 'setcoeexists', 'pairsep', 'mempairsep', 'memcore', 'existspropoftrue']","['theorem «exists» {q : p → Prop} :\n  (∃ x, q x) ↔ (∃ x ∈ p, q ⟨x, ‹_›⟩)', 'theorem set_coe.exists {s : set α} {p : s → Prop} :\n  (∃ x : s, p x) ↔ (∃ x (h : x ∈ s), p ⟨x, h⟩)', 'theorem «exists» {q : {a // p a} → Prop} :\n  (∃ x, q x) ↔ (∃ a b, q ⟨a, b⟩)']"
148,147,20,147_monotone_antitone_hf_monotonefactorial,"['monotone', 'antitone', 'hf', 'monotonefactorial', 'antitonemulconstofnonpos', 'nthlemono', 'antitoneico', 'antitoneicc', 'antitoneforall', 'antitonecompofdualiff']","['lemma antitone.mul_const_of_nonpos (hf : antitone f) (ha : a ≤ 0) : monotone (λ x, f x * a)', 'lemma antitone_comp_of_dual_iff : antitone (f ∘ of_dual) ↔ monotone f', 'lemma monotone.comp_antitone (hg : monotone g) (hf : antitone f) :\n  antitone (g ∘ f)']"
149,148,19,148_unbounded_isunit_associated_counitiso,"['unbounded', 'isunit', 'associated', 'counitiso', 'unitiso', 'functor', 'linearorder', 'inverse', 'monoidhomclass', 'dvdnotunitofdvdofnotdvd']","['theorem unbounded_lt_inter_le [linear_order α] (a : α) :\n  unbounded (<) (s ∩ {b | a ≤ b}) ↔ unbounded (<) s', 'theorem unbounded_inter_ge [linear_order α] (a : α) :\n  unbounded (>) (s ∩ {b | b ≤ a}) ↔ unbounded (>) s', 'theorem unbounded_ge_inter_gt [linear_order α] (a : α) :\n  unbounded (≥) (s ∩ {b | b < a}) ↔ unbounded (≥) s']"
150,149,19,149_sup_completelattice_subsemigroup_hbdd,"['sup', 'completelattice', 'subsemigroup', 'hbdd', 'directedon', 'gi', 'lcsup', 'islubsupeq', 'lesupofle', 'isgreatestcsupeq']","['lemma is_greatest.cSup_eq (H : is_greatest s a) : Sup s = a', ""lemma exists_lt_of_lt_cSup' {s : set α} {a : α} (h : a < Sup s) : ∃ b ∈ s, a < b"", 'lemma is_lub.Sup_eq (h : is_lub s a) : Sup s = a']"
151,150,19,150_cast_listoffn_natadd_hu,"['cast', 'listoffn', 'natadd', 'hu', 'addltaddleft', 'fin', 'hv', 'addcomm', 'transeq', 'iprop']","['lemma cast_inj {α β : Type*} (h : α = β) {x y : α} : cast h x = cast h y ↔ x = y', 'lemma cast_add_nat {n : ℕ} (m : ℕ) (i : fin n) :\n  cast (add_comm _ _) (add_nat m i) = nat_add m i', 'lemma cast_nat_add (n : ℕ) {m : ℕ} (i : fin m) :\n  cast (add_comm _ _) (nat_add n i) = add_nat n i']"
152,151,19,151_nmrange_snd_sprod_submonoid,"['nmrange', 'snd', 'sprod', 'submonoid', 'coesnd', 'subsemigroup', 'localequiv', 'umap', 'memprod', 'fprod']","['lemma coe_snd : ⇑(snd R S) = prod.snd', 'lemma le_prod_iff {s : subsemigroup M} {t : subsemigroup N} {u : subsemigroup (M × N)} :\n  u ≤ s.prod t ↔ u.map (fst M N) ≤ s ∧ u.map (snd M N) ≤ t', 'lemma coe_snd : ⇑(snd M N) = prod.snd']"
153,152,19,152_coessubsetcoe_hss_ssubsetcons_notssubsetempty,"['coessubsetcoe', 'hss', 'ssubsetcons', 'notssubsetempty', 'supsassoc', 'ssubsettrans', 'ssubsetofsubsetofssubset', 'ssubsetirrfl', 'ssubsetiffsubsetne', 'ssubsetiffinsert']","['lemma not_ssubset_empty (s : finset α) : ¬s ⊂ ∅', 'lemma ssubset_of_subset_of_ssubset {s₁ s₂ s₃ : finset α} (hs₁s₂ : s₁ ⊆ s₂) (hs₂s₃ : s₂ ⊂ s₃) :\n  s₁ ⊂ s₃', 'lemma coe_ssubset {s₁ s₂ : finset α} : (s₁ : set α) ⊂ s₂ ↔ s₁ ⊂ s₂']"
154,153,19,153_iswellorder_ispreorder_collapsef_nominorder,"['iswellorder', 'ispreorder', 'collapsef', 'nominorder', 'ischain', 'denselyordered', 'haslt', 'isantisymm', 'isdirected', 'ismin']","['theorem collapse_apply [is_well_order β s] (f : r ↪r s)\n  (a) : collapse f a = (collapse_F f a).1', 'theorem directed_on_iff_directed {s} : @directed_on α r s ↔ directed r (coe : s → α)', ""lemma is_chain.directed {f : β → α} {c : set β} (h : is_chain (f ⁻¹'o r) c) :\n  directed r (λ x : {a : β // a ∈ c}, f x)""]"
155,154,19,154_leofaddleaddleft_modeqaddfacself_leflooradd_subaddcancel,"['leofaddleaddleft', 'modeqaddfacself', 'leflooradd', 'subaddcancel', 'leaddofnonnegright', 'intadd', 'addleadd', 'negadd', 'flooraddint', 'ceiladdint']","['lemma add_pos {a b : ℤ} (ha : 0 < a) (hb : 0 < b) : 0 < a + b', 'lemma add_pos_of_nonneg_of_pos {a b : ℤ} (ha : 0 ≤ a) (hb : 0 < b) : 0 < a + b', 'theorem modeq_add_fac_self {a t n : ℤ} : a + n * t ≡ a [ZMOD n]']"
156,155,19,155_b2_b1_sign_a2,"['b2', 'b1', 'sign', 'a2', 'a1', 'iffiffnotorandornot', 'foldopreliffor', 'decidableimpiffornot', 'existsbool', 'eqoreqnegofsqeqsq']","['theorem decidable.imp_iff_right_iff [decidable a] : ((a → b) ↔ b) ↔ (a ∨ b)', ""lemma pred_mono_2' {c : Prop → Prop → Prop} {a1 a2 b1 b2 : Prop} :\n  (a1 ↔ a2) → (b1 ↔ b2) → (c a1 b1 ↔ c a2 b2)"", 'lemma sign_apply_eq (r : ℝ) : sign r = -1 ∨ sign r = 0 ∨ sign r = 1']"
157,156,19,156_lowerclosure_islowerset_isleast_ispredlimit,"['lowerclosure', 'islowerset', 'isleast', 'ispredlimit', 'issucclimit', 'isgreatest', 'image3', 'hl', 'hs', 'islub']","[""lemma image3_congr' (h : ∀ a b c, g a b c = g' a b c) : image3 g s t u = image3 g' s t u"", 'lemma is_pred_limit_rec_on_limit (hs : Π a, ¬ is_min a → C (pred a))\n  (hl : Π a, is_pred_limit a → C a) (hb : is_pred_limit b) :\n  @is_pred_limit_rec_on α _ _ C b hs hl = hl b hb', ""lemma is_succ_limit_rec_on_succ' (hs : Π a, ¬ is_max a → C (succ a))\n  (hl : Π a, is_succ_limit a → C a) {b : α} (hb : ¬ is_max b) :\n  @is_succ_limit_rec_on α _ _ C (succ b) hs hl = hs b hb""]"
158,157,18,157_chain_chainiffmem_chainmap_chainrangesucc,"['chain', 'chainiffmem', 'chainmap', 'chainrangesucc', 'consnenil', 'lhead', 'msucc', 'carries', 'chainsuccrange', 'ltofltpred']","['theorem chain_append_cons_cons {a b c : α} {l₁ l₂ : list α} :\n  chain R a (l₁ ++ b :: c :: l₂) ↔ chain R a (l₁ ++ [b]) ∧ R b c ∧ chain R c l₂', 'theorem chain.iff_mem {a : α} {l : list α} :\n  chain R a l ↔ chain (λ x y, x ∈ a :: l ∧ y ∈ l ∧ R x y) a l', ""theorem chain'.iff_mem : ∀ {l : list α}, chain' R l ↔ chain' (λ x y, x ∈ l ∧ y ∈ l ∧ R x y) l""]"
159,158,18,158_next_lerecon_splitonpaux_strongrecon,"['next', 'lerecon', 'splitonpaux', 'strongrecon', 'xssplitonp', 'quotientlifton', 'm1', 'xs', 'fixedpoints', 'invfunon']","['lemma pairwise_on_bool (hr : symmetric r) {a b : α} : pairwise (r on (λ c, cond c a b)) ↔ r a b', 'theorem le_rec_on_succ_left {C : ℕ → Sort u} {n m} (h1 : n ≤ m) (h2 : n+1 ≤ m)\n  {next : Π{{k}}, C k → C (k+1)} (x : C n) :\n  (le_rec_on h2 next (next x) : C m) = (le_rec_on h1 next x : C m)', 'theorem le_rec_on_succ {C : ℕ → Sort u} {n m} (h1 : n ≤ m) {h2 : n ≤ m+1} {next} (x : C n) :\n  (le_rec_on h2 @next x : C (m+1)) = next (le_rec_on h1 @next x : C m)']"
160,159,18,159_completelattice_hi_gi_usuprl,"['completelattice', 'hi', 'gi', 'usuprl', 'mapcsuprset', 'suprnatgtzeroeq', 'suprunpair', 'suprpliftdown', 'suprsupreqright', 'suprtrue']","['lemma u_supr_l [complete_lattice α] [complete_lattice β] (gi : galois_coinsertion l u)\n  {ι : Sort x} (f : ι → α) :\n  u (⨆ i, l (f i)) = ⨆ i, (f i)', 'lemma supr_true {s : true → α} : supr s = s trivial', 'lemma l_bsupr_u [complete_lattice α] [complete_lattice β] (gi : galois_insertion l u)\n  {ι : Sort x} {p : ι → Prop} (f : Π i (hi : p i), β) :\n  l (⨆ i hi, u (f i hi)) = ⨆ i hi, f i hi']"
161,160,18,160_meminterofmem_hi_intervsubsubset_infieqdif,"['meminterofmem', 'hi', 'intervsubsubset', 'infieqdif', 'interunionofantitone', 'intersmulsubset', 'intermulsubset', 'unionintersubset', 'intereqemptyiff', 'injonimagebintereq']","['lemma Inter_vsub_subset (s : ι → set β) (t : set β) : (⋂ i, s i) -ᵥ t ⊆ ⋂ i, s i -ᵥ t', ""lemma image_sInter_subset (S : set (set α)) (f : α → β) :\n  f '' (⋂₀ S) ⊆ ⋂ s ∈ S, f '' s"", ""lemma inj_on.image_bInter_eq {p : ι → Prop} {s : Π i (hi : p i), set α} (hp : ∃ i, p i) {f : α → β}\n  (h : inj_on f (⋃ i hi, s i hi)) :\n  f '' (⋂ i hi, s i hi) = ⋂ i hi, f '' (s i hi)""]"
162,161,18,161_complsubsetcompl_complleiffcomplle_memcompliff_lecompliffdisjointleft,"['complsubsetcompl', 'complleiffcomplle', 'memcompliff', 'lecompliffdisjointleft', 'eqcomplcomm', 'diffcompl', 'complunionself', 'complsunion', 'complsubsetcomm', 'complsdiffcompl']","['theorem compl_eq_univ_diff (s : set α) : sᶜ = univ \\ s', 'lemma coe_compl (a : regular α) : (↑(aᶜ) : α) = aᶜ', ""theorem compl_sUnion (S : set (set α)) :\n  (⋃₀ S)ᶜ = ⋂₀ (compl '' S)""]"
163,162,18,162_isucc_fin_finsucc_icastsucc,"['isucc', 'fin', 'finsucc', 'icastsucc', 'induction', 'h0', 'offn', 'offnsucc', 'inductionsucc', 'oneltsuccsucc']","['lemma forall_fin_one {p : fin 1 → Prop} : (∀ i, p i) ↔ p 0', 'lemma induction_succ {C : fin (n + 1) → Sort*} (h0 : C 0)\n  (hs : ∀ i : fin n, C i.cast_succ → C i.succ) (i : fin n) :\n  (induction h0 hs : _) i.succ = hs i (induction h0 hs i.cast_succ)', 'lemma cast_succ_one {n : ℕ} : fin.cast_succ (1 : fin (n + 2)) = 1']"
164,163,18,163_posnum_pos_numpos_abs,"['posnum', 'pos', 'numpos', 'abs', 'causeq', 'limzero', 'addmonoidwithone', 'trichotomy', 'addtonat', 'atoznum']","['theorem pos_add_lim_zero {f g : cau_seq α abs} : pos f → lim_zero g → pos (f + g)', 'theorem mul_pos {f g : cau_seq α abs} : pos f → pos g → pos (f * g)', 'theorem add_pos {f g : cau_seq α abs} : pos f → pos g → pos (f + g)']"
165,164,17,164_tolex_oflex_inl_hasle,"['tolex', 'oflex', 'inl', 'hasle', 'lex', 'sumlexassoc', 'haspow', 'inr', 'powtolex', 'tolexinj']","['lemma sum_lex_assoc_apply_inl_inr :\n  sum_lex_assoc α β γ (to_lex $ inl $ to_lex $ inr b) = to_lex (inr $ to_lex $ inl b)', 'lemma inl_le_inr [has_le α] [has_le β] (a : α) (b : β) : to_lex (inl a) ≤ to_lex (inr b)', 'lemma not_inr_le_inl [has_le α] [has_le β] {a : α} {b : β} :\n  ¬ to_lex (inr b) ≤ to_lex (inl a)']"
166,165,17,165_ofboolalg_lattice_ismodularlattice_hsup,"['ofboolalg', 'lattice', 'ismodularlattice', 'hsup', 'semilatticesup', 'disjoint', 'symmdiffle', 'disjointsdiffunique', 'disjointdisjointsuprightofdisjointsupleft', 'disjointdisjointsupleftofdisjointsupright']","['theorem disjoint.sdiff_unique (hd : disjoint x z) (hz : z ≤ y) (hs : y ≤ x ⊔ z) :\n  y \\ x = z', 'theorem disjoint.disjoint_sup_right_of_disjoint_sup_left\n  [lattice α] [order_bot α] [is_modular_lattice α] {a b c : α}\n  (h : disjoint a b) (hsup : disjoint (a ⊔ b) c) :\n  disjoint a (b ⊔ c)', 'theorem disjoint.disjoint_sup_left_of_disjoint_sup_right\n  [lattice α] [order_bot α] [is_modular_lattice α] {a b c : α}\n  (h : disjoint b c) (hsup : disjoint a (b ⊔ c)) :\n  disjoint (a ⊔ b) c']"
167,166,17,166_optionsubtype_subtypeequivcodomain_xsymm_fsubtypeequiv,"['optionsubtype', 'subtypeequivcodomain', 'xsymm', 'fsubtypeequiv', 'fsymm', 'xfst', 'xsnd', 'subtype', 'equivrefl', 'decidableeq']","['lemma coe_option_subtype_apply_apply [decidable_eq β] (x : β)\n  (e : {e : option α ≃ β // e none = x}) (a : α) :\n  ↑(option_subtype x e a) = (e : option α ≃ β) a', 'lemma subtype_quotient_equiv_quotient_subtype_symm_mk (p₁ : α → Prop) [s₁ : setoid α]\n  [s₂ : setoid (subtype p₁)] (p₂ : quotient s₁ → Prop) (hp₂ : ∀ a, p₁ a ↔ p₂ ⟦a⟧)\n  (h : ∀ x y : subtype p₁, @setoid.r _ s₂ x y ↔ (x : α) ≈ y) (x) :\n  (subtype_quotient_equiv_quotient_subtype p₁ p₂ hp₂ h).symm ⟦x⟧ = ⟨⟦x⟧, (hp₂ _).1 x.prop⟩', ""lemma coe_subtype_equiv_codomain_symm (f : {x' // x' ≠ x} → Y) :\n  ((subtype_equiv_codomain f).symm : Y → {g : X → Y // g ∘ coe = f}) =\n  λ y, ⟨λ x', if h : x' ≠ x then f ⟨x', h⟩ else y,\n    by { funext x', dsimp, erw [dif_pos x'.2, subtype.coe_eta] }⟩""]"
168,167,17,167_fn_succn_fm_xnj,"['fn', 'succn', 'fm', 'xnj', 'involutive', 'gn', 'id', 'semiconj', 'rightordcontinuous', 'fnpred']","['lemma involutive_iff_iter_2_eq_id {α} {f : α → α} : involutive f ↔ (f^[2] = id)', 'theorem iterate_eq_self (hf : involutive f) (hne : f ≠ id) : f^[n] = f ↔ odd n', 'lemma iterate_right {f : α → β} {ga : α → α} {gb : β → β} (h : semiconj f ga gb) (n : ℕ) :\n  semiconj f (ga^[n]) (gb^[n])']"
169,168,17,168_range_finrange_memrange_rangeval,"['range', 'finrange', 'memrange', 'rangeval', 'pairwiselerange', 'notmemrangeself', 'rangeaddequnion', 'rangeeqrange', 'memrangesucciff', 'memrangele']","['theorem mem_range {m n : ℕ} : m ∈ range n ↔ m < n', 'theorem not_mem_range_self {n : ℕ} : n ∉ range n', ""theorem range_eq_range' (n : ℕ) : range n = range' 0 n""]"
170,169,17,169_encode_functionextend_eextenddomain_memexact,"['encode', 'functionextend', 'eextenddomain', 'memexact', 'extend', 'punsat', 'mkpair', 'unsatofunsatsubelim', 'rangeextend', 'encodeprodval']","['theorem encode_some [encodable α] (a : α) :\n  encode (some a) = succ (encode a)', 'theorem encode_sigma_val (a b) : @encode (sigma γ) _ ⟨a, b⟩ =\n  mkpair (encode a) (encode b)', 'theorem encode_prod_val (a b) : @encode (α × β) _ (a, b) =\n  mkpair (encode a) (encode b)']"
171,170,17,170_odom_option_none_xpbind,"['odom', 'option', 'none', 'xpbind', 'obind', 'xjoin', 'part', 'optionnone', 'decidable', 'lreduceoption']","['theorem coe_none : (@option.none α : part α) = none', 'lemma Union_option {ι} (s : option ι → set α) : (⋃ o, s o) = s none ∪ ⋃ i, s (some i)', 'lemma Inter_option {ι} (s : option ι → set α) : (⋂ o, s o) = s none ∩ ⋂ i, s (some i)']"
172,171,17,171_cmp_termg_orderingeq_orderinggt,"['cmp', 'termg', 'orderingeq', 'orderinggt', 'cmpusing', 'ns', 'orderinglt', 'lincomb', 'decidablerel', 'lt']","[""lemma cmp_mul_left' {α : Type*} [has_mul α] [linear_order α] [covariant_class α α (*) (<)]\n  (a b c : α) : cmp (a * b) (a * c) = cmp b c"", ""lemma cmp_eq_cmp_symm : cmp x y = cmp x' y' ↔ cmp y x = cmp y' x'"", ""lemma lt_iff_lt_of_cmp_eq_cmp (h : cmp x y = cmp x' y') : x < y ↔ x' < y'""]"
173,172,17,172_multiset_cs_ndinsert_bs,"['multiset', 'cs', 'ndinsert', 'bs', 'addcons', 'sorteq', 'sortsorted', 'ndinsertofnotmem', 'ndinsertofmem', 'ltconsself']","['theorem cons_swap (a b : α) (s : multiset α) : a ::ₘ b ::ₘ s = b ::ₘ a ::ₘ s', 'theorem le_cons_self (s : multiset α) (a : α) : s ≤ a ::ₘ s', 'lemma cons_eq_cons {a b : α} {as bs : multiset α} :\n  a ::ₘ as = b ::ₘ bs ↔ ((a = b ∧ as = bs) ∨ (a ≠ b ∧ ∃cs, as = b ::ₘ cs ∧ bs = a ::ₘ cs))']"
174,173,17,173_xget_split_st_statet,"['xget', 'split', 'st', 'statet', 'issome', 'replicate', 'statetadapt', 'getorelse', 'getorelsedefaulteqiget', 'ctx']","['lemma val_eq_of_le {as : list int} {k : nat} :\n  as.length ≤ k → val v as = val_between v as 0 k', 'lemma replicate_left_inj {a : α} {n m : ℕ} :\n  replicate n a = replicate m a ↔ n = m', ""lemma run_adapt {σ' σ''} (st : σ) (split : σ → σ' × σ'') (join : σ' → σ'' → σ)\n    (x : state_t σ' m α) :\n    (state_t.adapt split join x : state_t σ m α).run st =\n    do let (st, ctx)""]"
175,174,17,174_update_functionupdate_fupdate_decidableeq,"['update', 'functionupdate', 'fupdate', 'decidableeq', 'epicongrleft', 'psymm', 'esymm', 'sort', 'elimupdateleft', 'writetolist']","['lemma le_update_iff : x ≤ function.update y i a ↔ x i ≤ a ∧ ∀ j ≠ i, x j ≤ y j', ""lemma update_noteq {a a' : α} (h : a ≠ a') (v : β a') (f : Πa, β a) :\n  update f a' v a = f a"", 'theorem update_idem {α} [decidable_eq α] {β : α → Sort*}\n  {a : α} (v w : β a) (f : Πa, β a) : update (update f a v) a w = update f a w']"
176,175,17,175_xy_xsuccabove_xy2_fin,"['xy', 'xsuccabove', 'xy2', 'fin', 'y2', 'isuccsuccabove', 'asuccabove', 'succabove', 'isuccabove', 'icastsucc']","['lemma succ_above_right_inj {x : fin (n + 1)} :\n  x.succ_above a = x.succ_above b ↔ a = b', 'lemma succ_above_left_inj {x y : fin (n + 1)} :\n  x.succ_above = y.succ_above ↔ x = y', 'lemma insert_nth_comp_succ_above (i : fin (n + 1)) (x : β) (p : fin n → β) :\n  insert_nth i x p ∘ i.succ_above = p']"
177,176,17,176_untrop_tropical_trop_addeqiff,"['untrop', 'tropical', 'trop', 'addeqiff', 'troporderiso', 'untropsup', 'untroppow', 'untropone', 'untropmul', 'untropinv']","['lemma untrop_inv [has_neg R] (x : tropical R) : untrop x⁻¹ = - untrop x', 'lemma trop_untrop (x : tropical R) : trop (untrop x) = x', 'lemma trop_mul_def [has_add R] (x y : tropical R) :\n  x * y = trop (untrop x + untrop y)']"
178,177,17,177_closure_intentclosure_extentclosure_closureclosurecoepreimage,"['closure', 'intentclosure', 'extentclosure', 'closureclosurecoepreimage', 'intentclosureunion', 'hxy', 'hy', 'mclosurepreimagele', 'cleclosure', 'extentclosureintentclosureextentclosure']","[""lemma map_mclosure (f : M →ₙ* N) (s : set M) :\n  (closure s).map f = closure (f '' s)"", 'lemma closure_eq_of_le (h₁ : s ⊆ S) (h₂ : S ≤ closure s) : closure s = S', 'lemma closure_eq : closure (S : set M) = S']"
179,178,16,178_fmappath_sattach_composepath_path,"['fmappath', 'sattach', 'composepath', 'path', 'etopath', 'memattach', 'pathcons', 'paths', 'congrfun', 'pcomp']","['lemma map_path_comp {a b : V} (p : path a b) :\n  ∀ {c : V} (q : path b c), F.map_path (p.comp q) = (F.map_path p).comp (F.map_path q)', 'lemma nil_comp {a : V} : ∀ {b} (p : path a b), path.nil.comp p = p', 'lemma map_path_cons {a b c : V} (p : path a b) (e : b ⟶ c) :\n  F.map_path (path.cons p e) = path.cons (F.map_path p) (F.map e)']"
180,179,16,179_symmimageimage_mapsto_compl_imagesymmimageofsubsettarget,"['symmimageimage', 'mapsto', 'compl', 'imagesymmimageofsubsettarget', 'imagesymmapply', 'complcomplimage', 'ballimageofball', 'imagecongr', 'imageconstsubuicc', 'imagediv']","[""lemma maps_to.extend_domain (h : maps_to g s t) :\n  maps_to (g.extend_domain f) (coe ∘ f '' s) (coe ∘ f '' t)"", ""lemma subset_coe_map (f : α →o β) : ∀ s : interval α, f '' s ⊆ s.map f"", ""theorem compl_compl_image [boolean_algebra α] (S : set α) :\n  compl '' (compl '' S) = S""]"
181,180,16,180_cons_hw_memcons_powerset,"['cons', 'hw', 'memcons', 'powerset', 'scons', 'typevec', 'ecast', 'hu', 'memconsiff', 'htolist']","['lemma to_list_cons {a : α} {s : finset α} (h : a ∉ s) : (cons a s h).to_list ~ a :: s.to_list', 'lemma mem_cons {h} : b ∈ s.cons a h ↔ b = a ∨ b ∈ s', 'theorem mem_cons {a y l} : a ∈ @cons α y l ↔ a ~ y ∨ a ∈ l']"
182,181,16,181_leftdistrib_leintro_rightdistrib_coenatadd,"['leftdistrib', 'leintro', 'rightdistrib', 'coenatadd', 'ltaddofposleft', 'addposleft', 'addleaddiffright', 'addleaddleft', 'addposiffposorpos', 'ledest']","['theorem cast_add [add_monoid_with_one R] (m n : ℕ) : ((m + n : ℕ) : R) = m + n', 'lemma coe_nat_add (n : ℕ) {m : ℕ} (i : fin m) : (nat_add n i : ℕ) = n + i', 'theorem map_add (n m k : ℕ) : (Ico n m).map ((+) k) = Ico (n + k) (m + k)']"
183,182,16,182_abv_lim_limzero_causeq,"['abv', 'lim', 'limzero', 'causeq', 'iscauseq', 'abs', 'causeqconst', 'iscauseqifflift', 'limle', 'limeqlimofequiv']","['lemma lim_add (f g : cau_seq β abv) : lim f + lim g = lim (f + g)', 'lemma lim_mul (f : cau_seq β abv) (x : β) : lim f * x = lim (f * const abv x)', 'lemma lim_eq_lim_of_equiv {f g : cau_seq β abv} (h : f ≈ g) : lim f = lim g']"
184,183,16,183_think_computation_sthink_thinkequiv,"['think', 'computation', 'sthink', 'thinkequiv', 'wseq', 'thinkn', 'return', 'terminates', 'n1', 'orelsethink']","['theorem think_equiv (s : computation α) : think s ~ s', 'theorem think_mem {s : computation α} {a} : a ∈ s → a ∈ think s', 'theorem orelse_think (c₁ c₂ : computation α) :\n  (think c₁ <|> think c₂) = think (c₁ <|> c₂)']"
185,184,16,184_rangeeqemptyiff_coeeqempty_lowerclosureempty_unionofempty,"['rangeeqemptyiff', 'coeeqempty', 'lowerclosureempty', 'unionofempty', 'upperclosureempty', 'symmdiffeqempty', 'setite', 'ordconnectedempty', 'ordconnectedcomponenteqempty', 'nmemsingletonempty']","['lemma lower_closure_empty : lower_closure (∅ : set α) = ⊥', 'lemma upper_closure_empty : upper_closure (∅ : set α) = ⊤', 'lemma maximals_empty : maximals r ∅ = ∅']"
186,185,16,185_ltdiviffmullt_mulltmul_divltdiv_ltdiviff,"['ltdiviffmullt', 'mulltmul', 'divltdiv', 'ltdiviff', 'h4', 'h3', 'hcd', 'hbd', 'hac', 'mulselfltmulselfiff']","['lemma div_lt_div (hac : a < c) (hbd : d ≤ b) (c0 : 0 ≤ c) (d0 : 0 < d) :\n  a / b < c / d', ""lemma decidable.mul_lt_mul'' [@decidable_rel α (≤)]\n  (h1 : a < c) (h2 : b < d) (h3 : 0 ≤ a) (h4 : 0 ≤ b) : a * b < c * d"", ""lemma mul_lt_mul' {a b c d : ℤ} (h1 : a ≤ c) (h2 : b < d) (h3 : 0 ≤ b) (h4 : 0 < c) :\n       a * b < c * d""]"
187,186,16,186_ss_seq1_seq_bind,"['ss', 'seq1', 'seq', 'bind', 'destruct', 'wseq', 'seqjoin', 'join', 'sseq', 'retbind']","['theorem bind_assoc (s : seq1 α) (f : α → seq1 β) (g : β → seq1 γ) :\n  bind (bind s f) g = bind s (λ (x : α), bind (f x) g)', 'theorem join_join (SS : wseq (wseq (wseq α))) :\n  join (join SS) ~ join (map join SS)', 'theorem join_join (SS : seq (seq1 (seq1 α))) :\n  seq.join (seq.join SS) = seq.join (seq.map join SS)']"
188,187,16,187_seticc_ltoffloorlt_flooraddone_floorltceilofltofpos,"['seticc', 'ltoffloorlt', 'flooraddone', 'floorltceilofltofpos', 'oneleflooriff', 'addoneleceiliff', 'ceiladdle', 'ceiladdone', 'natceilpos', 'ceileqzero']","['lemma ceil_add_one (ha : 0 ≤ a) : ⌈a + 1⌉₊ = ⌈a⌉₊ + 1', 'lemma floor_add_nat (ha : 0 ≤ a) (n : ℕ) : ⌊a + n⌋₊ = ⌊a⌋₊ + n', 'lemma floor_eq_iff (ha : 0 ≤ a) : ⌊a⌋₊ = n ↔ ↑n ≤ a ∧ a < ↑n + 1']"
189,188,16,188_star_hasstar_unitary_costar,"['star', 'hasstar', 'unitary', 'costar', 'pathstar', 'quiverstarequivcostar', 'staraddmonoid', 'deriv', 'obj', 'sndstar']","['lemma snd_star [has_star R] [has_star S] (x : R × S) : (star x).2 = star x.2', 'lemma fst_star [has_star R] [has_star S] (x : R × S) : (star x).1 = star x.1', 'lemma star_def [Π i, has_star (f i)] (x : Π i, f i) : star x = λ i, star (x i)']"
190,189,16,189_ofrat_offn_offin_cauchy,"['ofrat', 'offn', 'offin', 'cauchy', 'ofnat', '2n', 'abv', 'ofratneg', 'offintofin', 'equivpermoffncompperm']","['theorem of_rat_div (x y : β) : of_rat (x / y) = (of_rat x / of_rat y : Cauchy abv)', 'theorem of_rat_neg (x : β) : of_rat (-x) = (-of_rat x : Cauchy abv)', 'theorem of_rat_add (x y : β) : of_rat (x + y) = (of_rat x + of_rat y : Cauchy abv)']"
191,190,15,190_commute_functioncommute_smulcommclass_isscalartower,"['commute', 'functioncommute', 'smulcommclass', 'isscalartower', 'esnd', 'inverse', 'totalspace', 'hasmul', 'castnatmulright', 'rootfunctioncommutefinsetmap']","['lemma commute.smul_right_iff [has_mul β] [smul_comm_class α β β] [is_scalar_tower α β β]\n  {a b : β} (r : α) :\n  commute a (r • b) ↔ commute a b', 'lemma commute.smul_left [has_mul α] [smul_comm_class M α α] [is_scalar_tower M α α]\n  {a b : α} (h : commute a b) (r : M) :\n  commute (r • a) b', 'lemma commute.function_commute_mul_left (h : commute a b) :\n  function.commute ((*)a) ((*)b)']"
192,191,15,191_kerase_sigma_lkeys_kunion,"['kerase', 'sigma', 'lkeys', 'kunion', 'lkerase', 'lookup', 'alist', 'sentries', 'keysinsert', 'kextract']","['theorem kerase_comm (a₁ a₂) (l : list (sigma β)) :\n  kerase a₂ (kerase a₁ l) = kerase a₁ (kerase a₂ l)', ""theorem kerase_kerase {a a'} {l : list (sigma β)} :\n  (kerase a' l).kerase a = (kerase a l).kerase a'"", 'theorem kerase_cons_ne {a} {s : sigma β} {l : list (sigma β)} (h : a ≠ s.1) :\n  kerase a (s :: l) = s :: kerase a l']"
193,192,15,192_fn_fm_an_commute,"['fn', 'fm', 'an', 'commute', 'am', 'iterateiterate', 'iterateleft', 'mulleftiterate', 'lesucciterate', 'iterateself']","['lemma iterate_iterate (h : commute f g) (m n : ℕ) : commute (f^[m]) (g^[n])', 'lemma iterate_left (h : commute f g) (n : ℕ) : commute (f^[n]) g', 'lemma iterate_self (n : ℕ) : commute (f^[n]) f']"
194,193,15,193_strictantion_bot_ofantisymmetrization_seteqon,"['strictantion', 'bot', 'ofantisymmetrization', 'seteqon', 'listoffn', 'relembeddingorderembeddingofltembedding', 'ofantisymmetrizationltofantisymmetrizationiff', 'offnrec', 'offnrecoffn', 'accinductionbot']","[""lemma refl_trans_gen_of_transitive_reflexive {r' : α → α → Prop} (hr : reflexive r)\n  (ht : transitive r) (h : ∀ a b, r' a b → r a b) (h' : refl_trans_gen r' a b) :\n  r a b"", 'lemma of_antisymmetrization_lt_of_antisymmetrization_iff {a b : antisymmetrization α (≤)} :\n  of_antisymmetrization (≤) a < of_antisymmetrization (≤) b ↔ a < b', 'lemma acc.induction_bot {α} {r : α → α → Prop} {a bot : α} (ha : acc r a)\n  {C : α → Prop} (ih : ∀ b, b ≠ bot → C b → ∃ c, r c b ∧ C c) : C a → C bot']"
195,194,15,194_fract_fractfract_flooraddfract_fractsubself,"['fract', 'fractfract', 'flooraddfract', 'fractsubself', 'fractnegeqzero', 'fractmulnat', 'fractintcast', 'fracteqfract', 'fractadd', 'imagefract']","['lemma fract_mul_nat (a : α) (b : ℕ) : ∃ z : ℤ, fract a * b - fract (a * b) = z', 'lemma fract_neg_eq_zero {x : α} : fract (-x) = 0 ↔ fract x = 0', 'lemma abs_one_sub_fract : |1 - fract a| = 1 - fract a']"
196,195,15,195_subtype_fsubtypeperm_perm_coesubtype,"['subtype', 'fsubtypeperm', 'perm', 'coesubtype', 'tosubtype', 'en', 'ofsubtype', 'repeat', 'tosubtypeofsubtypeassoc', 'embeddingsubtype']","[""theorem coe_subtype : (submonoid_class.subtype S' : S' → M) = coe"", 'lemma coe_subtype {α} (p : α → Prop) : ⇑(subtype p) = coe', ""lemma coe_image {p : α → Prop} {s : set (subtype p)} :\n  coe '' s = {x | ∃h : p x, (⟨x, h⟩ : subtype p) ∈ s}""]"
197,196,15,196_floorlenegoneiff_floorpos_floornonneg_ltsuccfloor,"['floorlenegoneiff', 'floorpos', 'floornonneg', 'ltsuccfloor', 'ltceil', 'ltaddoneiff', 'linearorderedcommring', 'abssubltoneofflooreqfloor', 'floorneg', 'leceil']","['lemma ceil_congr (h : ∀ n : ℤ, a ≤ n ↔ b ≤ n) : ⌈a⌉ = ⌈b⌉', 'lemma ceil_sub_int (a : α) (z : ℤ) : ⌈a - z⌉ = ⌈a⌉ - z', 'lemma abs_sub_lt_one_of_floor_eq_floor {α : Type*} [linear_ordered_comm_ring α] [floor_ring α]\n  {a b : α} (h : ⌊a⌋ = ⌊b⌋) : |a - b| < 1']"
198,197,15,197_sfilter_filter_decidablepred_acard,"['sfilter', 'filter', 'decidablepred', 'acard', 'finset', 'exact', 's1filter', 'filterconsofpos', 'filtercardeq', 'disjointemptyleft']","['lemma monotone_filter_right (s : finset α) ⦃p q : α → Prop⦄\n  [decidable_pred p] [decidable_pred q] (h : p ≤ q) :\n  s.filter p ≤ s.filter q', 'theorem filter_subset (s : finset α) : s.filter p ⊆ s', 'lemma filter_true_of_mem {s : finset α} (h : ∀ x ∈ s, p x) : s.filter p = s']"
199,198,14,198_codisjoint_tcompl_coeinf_upperset,"['codisjoint', 'tcompl', 'coeinf', 'upperset', 'complinfself', 'infinfinatsucc', 'hnoteqcompl', 'codisjointhimpselfleft', 'codisjointhimpinfcancelright', 'ofcauchyinf']","['lemma codisjoint_inf_right : codisjoint a (b ⊓ c) ↔ codisjoint a b ∧ codisjoint a c', 'lemma codisjoint.himp_inf_cancel_right (h : codisjoint a b) : a ⇨ (a ⊓ b) = b', 'lemma codisjoint_himp_self_left : codisjoint (x ⇨ y) x']"
200,199,14,199_strictmono_strongmono_powstrictmonoright_arrowmk,"['strictmono', 'strongmono', 'powstrictmonoright', 'arrowmk', 'rootstrictmonoonstrictmono', 'oddstrictmonopow', 'succpnatstrictmono', 'mapstrictmono', 'nthlestrictmono', 'powrightstrictmono']","[""lemma pow_strict_mono_right' {n : ℕ} (hn : n ≠ 0) : strict_mono (λ a : M, a ^ n)"", 'lemma zpow_strict_mono_left (hn : 0 < n) : strict_mono ((^ n) : α → α)', ""lemma strong_mono.mk' {f : P ⟶ Q} [mono f]\n  (hf : ∀ (X Y : C) (z : X ⟶ Y) (hz : epi z) (u : X ⟶ P) (v : Y ⟶ Q)\n    (sq : comm_sq u z f v), sq.has_lift) : strong_mono f""]"
201,200,14,200_iscoprime_coprime_bfactors_natcoprime,"['iscoprime', 'coprime', 'bfactors', 'natcoprime', 'coprimeofmulmodeqone', 'iscoprimeofmuladdrightright', 'iscoprimemulunitrightright', 'iscoprimemulunitright', 'iscoprimemulunitleftright', 'iscoprimemulunitleftleft']","['theorem coprime.coprime_mul_right_right {k m n : ℕ} (H : coprime m (n * k)) : coprime m n', 'lemma coprime_add_mul_left_right (m n k : ℕ) : coprime m (n + m * k) ↔ coprime m n', 'lemma coprime_add_mul_right_left (m n k : ℕ) : coprime (m + k * n) n ↔ coprime m n']"
202,201,14,201_functionsurjective_surjective_hasrightinverse_mulleftsurjective,"['functionsurjective', 'surjective', 'hasrightinverse', 'mulleftsurjective', 'mapsurjective', 'leftinversesurjective', 'invsurjective', 'imageunivofsurjective', 'surjectivesummap', 'surjectiveiffhasrightinverse']","['lemma surjective_iff_has_right_inverse : surjective f ↔ has_right_inverse f', 'lemma bihimp_right_surjective (a : α) : surjective ((⇔) a)', 'theorem left_inverse.surjective {f : α → β} {g : β → α} (h : left_inverse f g) :\n  surjective f']"
203,202,14,202_ca_liftrel_cb_bs,"['ca', 'liftrel', 'cb', 'bs', 'as', 'rel', 's2', 'f1', 'f2', 's1']","['theorem lift_rel_of_mem {R : α → β → Prop} {a b ca cb}\n  (ma : a ∈ ca) (mb : b ∈ cb) (ab : R a b) : lift_rel R ca cb', 'theorem rel_of_lift_rel {R : α → β → Prop} {ca cb} :\n lift_rel R ca cb → ∀ {a b}, a ∈ ca → b ∈ cb → R a b', 'theorem lift_rel_def {R : α → β → Prop} {ca cb} : lift_rel R ca cb ↔\n  (terminates ca ↔ terminates cb) ∧ ∀ {a b}, a ∈ ca → b ∈ cb → R a b']"
204,203,14,203_decode_gconvergents_gp_gcontinuants,"['decode', 'gconvergents', 'gp', 'gcontinuants', 'ppreda', 'predb', 'preda', 'ppredb', 'gpa', 'gpb']","[""theorem mem_decode₂' [encodable α] {n : ℕ} {a : α} :\n  a ∈ decode₂ α n ↔ a ∈ decode α n ∧ encode a = n"", 'lemma numerators_recurrence {gp : pair K} {ppredA predA : K}\n  (succ_nth_s_eq : g.s.nth (n + 1) = some gp)\n  (nth_num_eq : g.numerators n = ppredA)\n  (succ_nth_num_eq : g.numerators (n + 1) = predA) :\n  g.numerators (n + 2) = gp.b * predA + gp.a * ppredA', 'lemma denominators_recurrence {gp : pair K} {ppredB predB : K}\n  (succ_nth_s_eq : g.s.nth (n + 1) = some gp)\n  (nth_denom_eq : g.denominators n = ppredB)\n  (succ_nth_denom_eq : g.denominators (n + 1) = predB) :\n  g.denominators (n + 2) = gp.b * predB + gp.a * ppredB']"
205,204,14,204_p2_p1_p3_g1,"['p2', 'p1', 'p3', 'g1', 'g2', 'vsubeqzeroiffeq', 'vsubeqsub', 'vaddvsubvaddcancelleft', 'vaddvsub', 'vaddrightinjective']","['lemma vadd_vsub_vadd_cancel_left (v : G) (p1 p2 : P) :\n  (v +ᵥ p1) -ᵥ (v +ᵥ p2) = p1 -ᵥ p2', 'lemma eq_vadd_iff_vsub_eq (p1 : P) (g : G) (p2 : P) : p1 = g +ᵥ p2 ↔ p1 -ᵥ p2 = g', 'lemma vsub_eq_zero_iff_eq {p1 p2 : P} : p1 -ᵥ p2 = (0 : G) ↔ p1 = p2']"
206,205,14,205_ismodularlatticeinfsupinfassoc_sdiffunique_lesupinf_ismodularlatticesupinfsupassoc,"['ismodularlatticeinfsupinfassoc', 'sdiffunique', 'lesupinf', 'ismodularlatticesupinfsupassoc', 'sdiffsymmdiff', 'infsupright', 'sdiffsdiffright', 'covbysupofinfcovbyleft', 'supinfassocofle', 'supinfinfcompl']","['theorem is_modular_lattice.inf_sup_inf_assoc {x y z : α} :\n  (x ⊓ z) ⊔ (y ⊓ z) = ((x ⊓ z) ⊔ y) ⊓ z', 'theorem sup_inf_assoc_of_le {x : α} (y : α) {z : α} (h : x ≤ z) :\n  (x ⊔ y) ⊓ z = x ⊔ (y ⊓ z)', 'lemma map_inf [semilattice_sup β] (hf : antitone_on f s) (hx : x ∈ s) (hy : y ∈ s) :\n  f (x ⊓ y) = f x ⊔ f y']"
207,206,14,206_psqs_addgroup_qs_mapsubswap,"['psqs', 'addgroup', 'qs', 'mapsubswap', 'subpos', 'subneg', 'subapply', 'multsub', 'vietaformulaquadratic', 'mapsub']","['lemma coe_sub (f g : cau_seq β abv) : ⇑(f - g) = f - g', 'theorem sub_apply (f g : cau_seq β abv) (i : ℕ) : (f - g) i = f i - g i', 'lemma sub_pf {α} [ring α] {ps qs psqs : α} (h : ps + -qs = psqs) : ps - qs = psqs']"
208,207,14,207_succ_succleiff_leofsucclesucc_leofltsucc,"['succ', 'succleiff', 'leofsucclesucc', 'leofltsucc', 'ltsuccoflt', 'ltsuccofle', 'ltsucciffltoreq', 'ltsucciff', 'ltofsucclt', 'leofsuccle']","['lemma le_of_lt_succ {a b : α} : a < succ b → a ≤ b', 'lemma lt_succ_iff : a < succ b ↔ a ≤ b', 'lemma lt_of_succ_lt {a b : ℕ} : succ a < b → a < b']"
209,208,14,208_countp_countpfilter_scountp_decidablepred,"['countp', 'countpfilter', 'scountp', 'decidablepred', 'countppos', 'countpof', 'lcountp', 'relcountpeq', 'coecountp', 'listcountp']","['lemma countp_append (l₁ l₂) : countp p (l₁ ++ l₂) = countp p l₁ + countp p l₂', 'theorem countp_le_of_le {s t} (h : s ≤ t) : countp p s ≤ countp p t', 'theorem countp_nsmul (s) (n : ℕ) : countp p (n • s) = n * countp p s']"
210,209,13,209_islub_islowerset_islubimage_islubpreimage,"['islub', 'islowerset', 'islubimage', 'islubpreimage', 'notissucclimit', 'lookupalleqlookup', 'toptolowerset', 'islowersetsunion', 'islowersetuniv', 'ptolowerset']","['lemma is_lower_set_sUnion {S : set (set α)} (hf : ∀ s ∈ S, is_lower_set s) : is_lower_set (⋃₀ S)', 'theorem lookup_all_eq_lookup (a : α) {l : list (sigma β)} (h : l.nodupkeys) :\n  lookup_all a l = (lookup a l).to_list', 'lemma top_to_lower_set : (⊤ : ideal P).to_lower_set = ⊤']"
211,210,13,210_refltransgen_transgen_hbc_ih,"['refltransgen', 'transgen', 'hbc', 'ih', 'refltransgeniffeq', 'transgenidem', 'torefltransgen', 'transright', 'reteqsome', 'casestail']","['lemma trans_left (hab : trans_gen r a b) (hbc : refl_trans_gen r b c) : trans_gen r a c', 'lemma head (hab : r a b) (hbc : refl_trans_gen r b c) : refl_trans_gen r a c', 'lemma head (hab : r a b) (hbc : trans_gen r b c) : trans_gen r a c']"
212,211,13,211_powersetlen_sublistslen_spowersetlen_scard,"['powersetlen', 'sublistslen', 'spowersetlen', 'scard', 'powersetlenaux', 'natchoose', 'powersetlencons', 'powersetlencoe', 'powersetlencardadd', 'powersetlenempty']","['lemma sublists_len_zero {α : Type*} (l : list α) :\n  sublists_len 0 l = [[]]', 'lemma sublists_len_sublist_of_sublist\n  {α : Type*} (n) {l₁ l₂ : list α} (h : l₁ <+ l₂) : sublists_len n l₁ <+ sublists_len n l₂', 'lemma bind_powerset_len {α : Type*} (S : multiset α) :\n  bind (multiset.range (S.card + 1)) (λ k, S.powerset_len k) = S.powerset']"
213,212,13,212_flip_covariant_contravariant_uisspecial,"['flip', 'covariant', 'contravariant', 'uisspecial', 'vectorallp', 'commsemigroup', 'vectorallpcons', 'finaddflip', 'finaddflipapplycastadd', 'flipcomp']","['theorem flip_w : (flip u).w = u.z', 'theorem flip_y : (flip u).y = u.x', 'lemma flip_comp : flip (r ∘r p) = (flip p) ∘r (flip r)']"
214,213,13,213_rel_multiset_tmap_smap,"['rel', 'multiset', 'tmap', 'smap', 'spowersetmap', 'existsmemofrelofmem', 'antidiagonalmapfst', 'santidiagonal', 'relzeroright', 'relmapright']","['lemma rel_zero_right {a : multiset α} : rel r a 0 ↔ a = 0', 'lemma rel_map_right {s : multiset α} {t : multiset γ} {f : γ → β} :\n  rel r s (t.map f) ↔ rel (λa b, r a (f b)) s t', 'lemma exists_mem_of_rel_of_mem {r : α → β → Prop} {s : multiset α} {t : multiset β}\n  (h : rel r s t) :\n  ∀ {a : α} (ha : a ∈ s), ∃ b ∈ t, r a b']"
215,214,13,214_biheytinghom_gcomp_fcomp_hcomp,"['biheytinghom', 'gcomp', 'fcomp', 'hcomp', 'rightordcontinuous', 'cancelleft', 'coecomp', 'bothom', 'onehom', 'compsub']","['lemma comp (hg : right_ord_continuous g) (hf : right_ord_continuous f) :\n  right_ord_continuous (g ∘ f)', 'lemma cancel_left {g : bot_hom β γ} {f₁ f₂ : bot_hom α β} (hg : injective g) :\n  g.comp f₁ = g.comp f₂ ↔ f₁ = f₂', 'lemma cancel_left (hg : injective g) : g.comp f₁ = g.comp f₂ ↔ f₁ = f₂']"
216,215,13,215_isantichain_isatomic_snontrivial_isantisymm,"['isantichain', 'isatomic', 'snontrivial', 'isantisymm', 'gforget', 'gadj', 'adjunctionofleftadjoint', 'subsetaccumulate', 'imageisoiff', 'imagerelembedding']","[""lemma image (hs : is_antichain r s) (f : α → β) (h : ∀ ⦃a b⦄, r' (f a) (f b) → r a b) :\n  is_antichain r' (f '' s)"", 'lemma subset (hs : is_antichain r s) (h : t ⊆ s) : is_antichain r t', 'lemma subset_accumulate [preorder α] {x : α} : s x ⊆ accumulate s x']"
217,216,13,216_nontrivialoflt_neltofle_eqofgeofnotgt_existsltandltiffnotdvd,"['nontrivialoflt', 'neltofle', 'eqofgeofnotgt', 'existsltandltiffnotdvd', 'ltinf', 'lteqnotge', 'infltofrightlt', 'strictmonoonltifflt', 'ltoreqofle', 'ltofeqoflt']","['lemma lt_inf {a b c : cau_seq α abs} (hb : a < b) (hc : a < c) : a < b ⊓ c', 'lemma eq_of_ge_of_not_gt [partial_order α] {a b : α} (hab : a ≤ b) (hba : ¬ a < b) : b = a', 'theorem lt_of_eq_of_lt {f g h : cau_seq α abs}\n  (fg : f ≈ g) (gh : g < h) : f < h']"
218,217,13,217_negofnat_ofnat_ofint_succ,"['negofnat', 'ofnat', 'ofint', 'succ', 'mulnegsuccofnatnegsuccofnat', 'negsuccmulcoenat', 'negofnatofsucc', 'negofnatnezero', 'negofnateq', 'negsuccofnatdiv']","['lemma neg_neg_of_nat_succ (n : ℕ) : -(-[1+ n]) = of_nat (succ n)', 'theorem neg_succ_mul_coe_nat (m n : ℕ) : -[1+ m] * n = -(succ m * n)', 'lemma mul_neg_succ_of_nat_neg_succ_of_nat (m n : nat) :\n               -[1+ m] * -[1+ n] = of_nat (succ m * succ n)']"
219,218,12,218_invleone_oneleinvofleone_oneleinv_negleoneiff,"['invleone', 'oneleinvofleone', 'oneleinv', 'negleoneiff', 'negeqoneiff', 'posleoneiff', 'leinviffmulleoneright', 'leftselfleinv', 'leftinvleoneiff', 'invmulleoneiff']","['lemma inv_le_inv_of_neg (ha : a < 0) (hb : b < 0) : a⁻¹ ≤ b⁻¹ ↔ b ≤ a', 'lemma inv_le_one₀ (ha : a ≠ 0) : a⁻¹ ≤ 1 ↔ 1 ≤ a', 'lemma inv_le_one (ha : 1 ≤ a) : a⁻¹ ≤ 1']"
220,219,12,219_sqrt_sqrteq_sqrtmulsqrtltsucc_nn,"['sqrt', 'sqrteq', 'sqrtmulsqrtltsucc', 'nn', 'xy2', 'qq', 'ltsuccsqrt', 'sqrteqzero', 'sqaddsqmulsqaddsq', 'sqrtlt']","['theorem sqrt_eq (n : ℕ) : sqrt (n*n) = n', 'theorem sqrt_eq_zero {n : ℕ} : sqrt n = 0 ↔ n = 0', ""theorem le_sqrt' {m n : ℕ} : m ≤ sqrt n ↔ m ^ 2 ≤ n""]"
221,220,12,220_surjective_up_upsurjective_functionsurjective,"['surjective', 'up', 'upsurjective', 'functionsurjective', 'surjectivelift', 'mksurjective', 'surjectivehead', 'compsurjective', 'rangeiffsurjective', 'surjectiveofcomp']","['lemma surjective (e : R ≃+* S) : function.surjective e', 'theorem surjective (e : α ≃ β) : surjective e', 'lemma comp_surjective (f : α → β) (e : β ≃ γ) : surjective (e ∘ f) ↔ surjective f']"
222,221,12,221_modeqmodiffmodsubeqzero_ofnatmod_modtwoeqzeroorone_modtoint,"['modeqmodiffmodsubeqzero', 'ofnatmod', 'modtwoeqzeroorone', 'modtoint', 'modone', 'modneg', 'modmulleftmod', 'modmodofdvd', 'dvdiffmodeqzero', 'modmulrightmod']","['theorem mod_def (a b : ℤ) : a % b = a - b * (a / b)', 'theorem mod_to_int : ∀ n d, ((n % d : znum) : ℤ) = n % d', 'theorem of_nat_mod (m n : nat) : (m % n : ℤ) = of_nat (m % n)']"
223,222,12,222_conssubsetcons_vsubselfmono_notsubsetiffexistsmemnotmem_mulsubsetiffright,"['conssubsetcons', 'vsubselfmono', 'notsubsetiffexistsmemnotmem', 'mulsubsetiffright', 'mulsubsetiffleft', 'setsmulsubsetiff', 'infssubsetright', 'infssubsetleft', 'smulsubsetiff', 'subsetsunionofsubset']","['lemma mul_subset_iff_right : s * t ⊆ u ↔ ∀ b ∈ t, op b • s ⊆ u', 'lemma subset_sUnion_of_subset {s : set α} (t : set (set α)) (u : set α) (h₁ : s ⊆ u)\n  (h₂ : u ∈ t) : s ⊆ ⋃₀ t', 'lemma cons_subset_cons {hs ht} : s.cons a hs ⊆ t.cons a ht ↔ s ⊆ t']"
224,223,12,223_commute_invleftiff_powleft_negleftiff,"['commute', 'invleftiff', 'powleft', 'negleftiff', 'mulleft', 'invrightiff', 'invleft', 'invinv', 'addleft', 'distrib']","['theorem inv_left_iff₀ : commute a⁻¹ b ↔ commute a b', 'theorem pow_left (h : commute a b) (n : ℕ) : commute (a ^ n) b', 'theorem neg_left_iff : commute (-a) b ↔ commute a b']"
225,224,12,224_hasintcast_zpoweqzeroiff_eqoneofmuleqselfleft_ofcauchyintcast,"['hasintcast', 'zpoweqzeroiff', 'eqoneofmuleqselfleft', 'ofcauchyintcast', 'zpoweqpow', 'onedivzpow', 'evenissquarezpow', 'prodintmod', 'eqzerooreqzeroofmuleqzero', 'oflexintcast']","['lemma even.is_square_zpow [group α] {n : ℤ} : even n → ∀ a : α, is_square (a ^ n)', 'theorem eq_one_of_mul_eq_self_left {a b : ℤ} (Hpos : a ≠ 0) (H : b * a = a) : b = 1', 'lemma down_int_cast [has_int_cast α] (n : ℤ) : down (n : ulift α) = n']"
226,225,12,225_nthle_lnthle_xsnthle_hn,"['nthle', 'lnthle', 'xsnthle', 'hn', 'xslength', 'lengthpmap', 'hk', '1length', 'using', 'xnthle']","['lemma nth_le_to_list (b : buffer α) {i : ℕ} (h) :\n  b.to_list.nth_le i h = b.read ⟨i, by simpa using h⟩', 'lemma nth_le_eq_of_ne_imp_not_nodup (xs : list α) (n m : ℕ) (hn : n < xs.length)\n  (hm : m < xs.length) (h : xs.nth_le n hn = xs.nth_le m hm) (hne : n ≠ m) :\n  ¬ nodup xs', 'lemma nth_le_pmap {p : α → Prop} (f : Π a, p a → β) {l : list α} (h : ∀ a ∈ l, p a) {n : ℕ}\n  (hn : n < (pmap f l h).length) :\n  nth_le (pmap f l h) n hn = f (nth_le l n (@length_pmap _ _ p f l h ▸ hn))\n    (h _ (nth_le_mem l n (@length_pmap _ _ p f l h ▸ hn)))']"
227,226,12,226_epi_strongepi_algebraepiofepi_arrowmk,"['epi', 'strongepi', 'algebraepiofepi', 'arrowmk', 'isisoofepiofissplitmono', 'strongepiofarrowiso', 'splitepiepi', 'splitepi', 'se', 'epicomp']","['lemma epi_of_epi {X Y Z : C} (f : X ⟶ Y) (g : Y ⟶ Z) [epi (f ≫ g)] : epi g', 'lemma is_iso_of_epi_of_strong_mono (f : P ⟶ Q) [epi f] [strong_mono f] : is_iso f', 'lemma is_iso_of_epi_of_is_split_mono {X Y : C} (f : X ⟶ Y) [is_split_mono f] [epi f] : is_iso f']"
228,227,11,227_preservesmonomorphisms_ecounitapp_ecounitinvapp_mmul,"['preservesmonomorphisms', 'ecounitapp', 'ecounitinvapp', 'mmul', 'inclusion', 'restrictscalarsinj', 'powmonoidwithzerohomapply', 'powmonoidwithzerohom', 'mulsingleinj', 'leftcancelmonoidext']","['lemma eq_mk_iff_coe_eq {k : ℕ} {hk : k < n} : a = ⟨k, hk⟩ ↔ (a : ℕ) = k', 'lemma inclusion_mk {h : s ⊆ t} (a : α) (ha : a ∈ s) : inclusion h ⟨a, ha⟩ = ⟨a, h ha⟩', 'lemma inclusion_right (h : s ⊆ t) (x : t) (m : (x : α) ∈ s) : inclusion h ⟨x, m⟩ = x']"
229,228,11,228_divltiffofneg_divltoneiff_mulinvltoneiff_ltdiviffofneg,"['divltiffofneg', 'divltoneiff', 'mulinvltoneiff', 'ltdiviffofneg', 'mulposiff', 'leftselfltinv', 'invltinv', 'invlt', 'existsposltmul', 'divnegofnegofpos']","['lemma div_neg_of_neg_of_pos (ha : a < 0) (hb : 0 < b) : a / b < 0', ""lemma div_lt_iff_of_neg' (hc : c < 0) : b / c < a ↔ c * a < b"", 'lemma lt_div_iff_of_neg (hc : c < 0) : a < b / c ↔ b < a * c']"
230,229,11,229_tofuneqcoe_ftofun_tofunascoe_tofun,"['tofuneqcoe', 'ftofun', 'tofunascoe', 'tofun', 'etofun', 'coefntofun', 'ringinvo', 'coheytinghom', 'completelatticehom', 'centroidhom']","['lemma to_fun_as_coe (e : α ≃ β) : e.to_fun = e', 'lemma to_fun_eq_coe {f : α →o β} : f.to_fun = f', 'lemma to_fun_eq_coe {f : centroid_hom α} : f.to_fun = (f : α → α)']"
231,230,11,230_divinvmonoid_am_zpowstrictanti_zpowsubone,"['divinvmonoid', 'am', 'zpowstrictanti', 'zpowsubone', 'zpowtwoposofnezero', 'zerozpoweq', 'zpowzeropos', 'natzpownezeroofpos', 'monoidhommapzpow', 'logzpow']","['lemma zpow_strict_mono (hx : 1 < a) : strict_mono ((^) a : ℤ → α)', 'lemma zero_zpow_eq (n : ℤ) : (0 : G₀) ^ n = if n = 0 then 1 else 0', 'lemma log_zpow {b : ℕ} (hb : 1 < b) (z : ℤ) : log b (b ^ z : R) = z']"
232,231,11,231_llookmap_lookup_permlookup_slookup,"['llookmap', 'lookup', 'permlookup', 'slookup', 'sigma', 'lnodupkeys', 'sentries', 'lkeys', 'nd', 'lookmapsome']","['theorem perm_lookup (a : α) {l₁ l₂ : list (sigma β)}\n  (nd₁ : l₁.nodupkeys) (nd₂ : l₂.nodupkeys) (p : l₁ ~ l₂) : lookup a l₁ = lookup a l₂', 'theorem lookup_kinsert {a} {b : β a} (l : list (sigma β)) :\n  lookup a (kinsert a b l) = some b', 'theorem of_mem_lookup\n  {a : α} {b : β a} : ∀ {l : list (sigma β)}, b ∈ lookup a l → sigma.mk a b ∈ l']"
233,232,11,232_abv_leofeqofle_mulequivzero_subabvleabvsub,"['abv', 'leofeqofle', 'mulequivzero', 'subabvleabvsub', 'strictmonoonmulself', 'memuiccofge', 'abvone', 'abvsuble', 'eqofabssubnonpos', 'wcovbygeofgt']","['lemma abv_sub_le (a b c : R) : abv (a - c) ≤ abv (a - b) + abv (b - c)', ""lemma abv_one' : abv 1 = 1"", 'lemma sub_abv_le_abv_sub (a b : R) : abv a - abv b ≤ abv (a - b)']"
234,233,11,233_sattachfin_finrotate_hy_fin,"['sattachfin', 'finrotate', 'hy', 'fin', 'cardattachfin', 'natlesucc', 'memfin', 'memattachfin', 'sfin', 'castsuccltiffsuccle']","['lemma mem_fin {n} {s : finset ℕ} :\n  ∀ a : fin n, a ∈ s.fin n ↔ (a : ℕ) ∈ s', 'lemma mk_lt_mk {x y : nat} {hx} {hy} : (⟨x, hx⟩ : fin n) < ⟨y, hy⟩ ↔ x < y', 'lemma mk_le_mk {x y : nat} {hx} {hy} : (⟨x, hx⟩ : fin n) ≤ ⟨y, hy⟩ ↔ x ≤ y']"
235,234,11,234_max_maxeqtop_maxltmaxleftiff_argmaxeqnone,"['max', 'maxeqtop', 'maxltmaxleftiff', 'argmaxeqnone', 'lfold', 'leofmaxleright', 'maxlemulofonele', 'largmax', 'maxltmaxrightiff', 'maxnatleofforallle']","['lemma max_lt_max_right_iff : max a b < max a c ↔ b < c ∧ a < c', 'lemma max_eq_top [order_top α] {a b : α} : max a b = ⊤ ↔ a = ⊤ ∨ b = ⊤', 'lemma le_of_max_le_right {a b c : α} (h : max a b ≤ c) : b ≤ c']"
236,235,11,235_denomdiveqofcoprime_eqzeroofdiveqzero_intdivnonnegofposofnonneg_diveqzerooflt,"['denomdiveqofcoprime', 'eqzeroofdiveqzero', 'intdivnonnegofposofnonneg', 'diveqzerooflt', 'coeintdivself', 'denom', 'hb0', 'dvddivofmuldvd', 'mknezero', 'divleoflemul']","['lemma «forall» {p : ℚ → Prop} : (∀ r, p r) ↔ ∀ a b : ℤ, p (a / b)', 'lemma denom_div_eq_of_coprime {a b : ℤ} (hb0 : 0 < b) (h : nat.coprime a.nat_abs b.nat_abs) :\n  ((a / b : ℚ).denom : ℤ) = b', 'theorem mk_ne_zero {a b : ℤ} (b0 : b ≠ 0) : a /. b ≠ 0 ↔ a ≠ 0']"
237,236,11,236_dist_distzeroleft_disttriright_disttrileft,"['dist', 'distzeroleft', 'disttriright', 'disttrileft', 'distposofne', 'distmulright', 'distmulleft', 'disteqsubofle', 'disteqintro', 'distcomm']","['theorem dist_mul_left (k n m : ℕ) : dist (k * n) (k * m) = k * dist n m', 'theorem dist_eq_intro {n m k l : ℕ} (h : n + m = k + l) : dist n k = dist l m', 'theorem dist_comm (n m : ℕ) : dist n m = dist m n']"
238,237,10,237_isrightregular_isleftregular_issmulregular_isregular,"['isrightregular', 'isleftregular', 'issmulregular', 'isregular', 'isrightregularnezero', 'isregularofcancelmonoid', 'mulisrightregulariff', 'lrb', 'lra', 'isrightregularofnonzerodivisor']","['lemma is_right_regular.ne_zero [nontrivial R] (ra : is_right_regular a) : a ≠ 0', 'lemma is_regular.ne_zero [nontrivial R] (la : is_regular a) : a ≠ 0', 'lemma is_left_regular.mul (lra : is_left_regular a) (lrb : is_left_regular b) :\n  is_left_regular (a * b)']"
239,238,10,238_surjon_bijon_invon_surjoncompright,"['surjon', 'bijon', 'invon', 'surjoncompright', 'surjoncompleft', 'invonsingleton', 'bijoninjon', 'bijonsingleton', 'bijonsurjon', 'monovaryonself']","['lemma monovary_on_self (f : ι → α) (s : set ι) : monovary_on f f s', ""lemma surj_on.comp_right {s : set β} {t : set γ} (hf : surjective f) (hg : surj_on g s t) :\n  surj_on (g ∘ f) (f ⁻¹' s) t"", ""lemma surj_on.comp_left (hf : surj_on f s t) (g : β → γ) : surj_on (g ∘ f) s (g '' t)""]"
240,239,10,239_zpoweqzpowiff_powdvdpowiffleright_rightonelepowofle_invpowleinvpowofle,"['zpoweqzpowiff', 'powdvdpowiffleright', 'rightonelepowofle', 'invpowleinvpowofle', 'evenpownonneg', 'powcardleprod', 'notprimeofintmul', 'pownotprime', 'b2l', 'b2k']","['lemma inv_pow_le_inv_pow_of_le (a1 : 1 ≤ a) {m n : ℕ} (mn : m ≤ n) :\n  (a ^ n)⁻¹ ≤ (a ^ m)⁻¹', 'lemma pow_not_prime {n : ℕ} (hn : n ≠ 1) : ¬ prime (a ^ n)', ""lemma zpow_eq_zpow_iff' (hn : n ≠ 0) : a ^ n = b ^ n ↔ a = b""]"
241,240,10,240_bijective_natabssurjective_functionbijective_surjective,"['bijective', 'natabssurjective', 'functionbijective', 'surjective', 'bijectiveiffbijectiveofunionequniv', 'injectivesurjinv', 'isisoiffbijective', 'surjinv', 'restrictpreimagesurjective', 'preimagesurjective']","['lemma comp_bijective (f : α → β) (e : F) :\n  function.bijective (e ∘ f) ↔ function.bijective f', 'lemma bijective_iff_bijective_of_Union_eq_univ :\n  bijective f ↔ ∀ i, bijective ((U i).restrict_preimage f)', 'lemma bijective_iff_exists_unique (f : α → β) : bijective f ↔\n  ∀ b : β, ∃! (a : α), f a = b']"
242,241,10,241_notmemempty_eqemptyiffforallnotmem_mememptyifffalse_notemptyhom,"['notmemempty', 'eqemptyiffforallnotmem', 'mememptyifffalse', 'notemptyhom', 'injectivenonemptyapplyiff', 'setu', 'notnonemptyempty', 'classu', 'alist', 'snonempty']","['theorem mem_empty_iff_false (x : α) : x ∈ (∅ : set α) ↔ false', 'lemma injective.nonempty_apply_iff {f : set α → set β} (hf : injective f)\n  (h2 : f ∅ = ∅) {s : set α} : (f s).nonempty ↔ s.nonempty', 'theorem not_mem_empty (a : α) : a ∉ (∅ : alist β)']"
243,242,10,242_hascompl_rangediffimage_disjointcomplrightiff_compllecompliffle,"['hascompl', 'rangediffimage', 'disjointcomplrightiff', 'compllecompliffle', 'compliffnot', 'preimagecoecompl', 'notmemcompliff', 'sndcompl', 'subsetimagecompl', 'unionimageinfright']","[""lemma preimage_coe_compl' (s : set α) : (coe : sᶜ → α) ⁻¹' s = ∅"", ""theorem subset_image_compl {f : α → β} {s : set α} (H : surjective f) : (f '' s)ᶜ ⊆ f '' sᶜ"", ""lemma range_diff_image {f : α → β} (H : injective f) (s : set α) :\n  range f \\ f '' s = f '' sᶜ""]"
244,243,10,243_esymm_arrowcongr_isohomcongr_ewithonecongr,"['esymm', 'arrowcongr', 'isohomcongr', 'ewithonecongr', 'fincongr', 'embeddingcongr', 'mapequiv', 'fmapiso', 'congrarg', 'etarget']","['lemma embedding_congr_symm {α₁ β₁ α₂ β₂ : Sort*} (e₁ : α₁ ≃ α₂) (e₂ : β₁ ≃ β₂) :\n  (embedding_congr e₁ e₂).symm = embedding_congr e₁.symm e₂.symm', 'lemma fin_congr_apply_coe {n m : ℕ} (h : n = m) (k : fin n) :\n  (fin_congr h k : ℕ) = k', ""lemma congr_fun_congr_arg {α β γ : Sort*} (f : α → β → γ) {a a' : α} (p : a = a') (b : β) :\n  congr_fun (congr_arg f p) b = congr_arg (λ a, f a b) p""]"
